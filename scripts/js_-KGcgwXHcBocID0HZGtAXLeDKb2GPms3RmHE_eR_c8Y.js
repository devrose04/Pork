/* @license GNU-GPL-2.0-or-later https://www.drupal.org/licensing/faq */
(function (Drupal) { 'use strict'; Drupal.behaviors.addToAny = { attach: function (context, settings) { if (context !== document && window.a2a) a2a.init_all(); } }; })(Drupal);;
(function (Drupal, $) { Drupal.behaviors.lazy_image_styles = { attach: function (context) { if (!window.HTMLPictureElement) { var $imgSource = $('picture img'); if ($imgSource.length) $imgSource.each(function () { var imgSourceSrcset = $(this).attr('data-pfsrc'); if (imgSourceSrcset) $(this).attr('src', imgSourceSrcset); }); } function lazyImageStyles() { var lazyImages = Array.prototype.slice.call(document.querySelectorAll('[data-lis]')); var lazyResponseImages = Array.prototype.slice.call(document.querySelectorAll('[data-rlis]')); var inAdvance = 300; lazyImages.forEach(function (image) { if (jQuery(image).offset().top < window.innerHeight + window.pageYOffset + inAdvance) { image.src = image.dataset.lis; image.removeAttribute('data-lis'); } }); lazyResponseImages.forEach(function (source) { if (jQuery(source).offset().top < window.innerHeight + window.pageYOffset + inAdvance) { source.srcset = source.dataset.rlis; source.removeAttribute('data-rlis'); } }); } lazyImageStyles(); function delayedAction(callback, timeout) { return (function (callback, timeout) { var timeoutid = null; var returnObj = {}; returnObj.clear = function () { clearTimeout(timeoutid); }.bind(returnObj); returnObj.set = function () { clearTimeout(timeoutid); timeoutid = setTimeout(function () { callback(); }, timeout); }.bind(returnObj); return returnObj; })(callback, timeout); } var delayedLazyImageStyles = delayedAction(lazyImageStyles, 50); window.addEventListener('scroll', delayedLazyImageStyles.set); window.addEventListener('resize', delayedLazyImageStyles.set); } }; })(Drupal, jQuery);;