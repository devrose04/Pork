/* @license GNU-GPL-2.0-or-later https://www.drupal.org/licensing/faq */
(() => { var M = Object.create; var y = Object.defineProperty; var D = Object.getOwnPropertyDescriptor; var T = Object.getOwnPropertyNames; var W = Object.getPrototypeOf, K = Object.prototype.hasOwnProperty; var _ = (i) => y(i, "__esModule", { value: !0 }); var E = (i, e) => () => (e || i((e = { exports: {} }).exports, e), e.exports); var $ = (i, e, t) => { if (e && typeof e == "object" || typeof e == "function") { for (let r of T(e)) !K.call(i, r) && r !== "default" && y(i, r, { get: () => e[r], enumerable: !(t = D(e, r)) || t.enumerable }); } return i; }, A = (i) => $(_(y(i != null ? M(W(i)) : {}, "default", i && i.__esModule && "default" in i ? { get: () => i.default, enumerable: !0 } : { value: i, enumerable: !0 })), i); var w = E((S) => { "use strict"; var O = function () { function i(e, t) { for (var r = 0; r < t.length; r++) { var n = t[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n); } } return function (e, t, r) { return t && i(e.prototype, t), r && i(e, r), e; }; }(), j = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (i) { return typeof i; } : function (i) { return i && typeof Symbol == "function" && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : typeof i; }; function H(i) { if (Array.isArray(i)) { for (var e = 0, t = Array(i.length); e < i.length; e++)t[e] = i[e]; return t; } else return Array.from(i); } function k(i, e) { if (!(i instanceof e)) throw new TypeError("Cannot call a class as a function"); } (function (i, e) { for (var t in e) i[t] = e[t]; })(S, function (i) { var e = {}; function t(r) { if (e[r]) return e[r].exports; var n = e[r] = { i: r, l: !1, exports: {} }; return i[r].call(n.exports, n, n.exports, t), n.l = !0, n.exports; } return t.m = i, t.c = e, t.d = function (r, n, s) { t.o(r, n) || Object.defineProperty(r, n, { enumerable: !0, get: s }); }, t.r = function (r) { typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(r, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(r, "__esModule", { value: !0 }); }, t.t = function (r, n) { if (1 & n && (r = t(r)), 8 & n || 4 & n && (typeof r == "undefined" ? "undefined" : j(r)) == "object" && r && r.__esModule) return r; var s = Object.create(null); if (t.r(s), Object.defineProperty(s, "default", { enumerable: !0, value: r }), 2 & n && typeof r != "string") for (var o in r) t.d(s, o, function (l) { return r[l]; }.bind(null, o)); return s; }, t.n = function (r) { var n = r && r.__esModule ? function () { return r.default; } : function () { return r; }; return t.d(n, "a", n), n; }, t.o = function (r, n) { return Object.prototype.hasOwnProperty.call(r, n); }, t.p = "", t(t.s = 117); }({ 0: function (e, t) { e.exports = function () { function r() { k(this, r); } return O(r, null, [{ key: "triggerEvent", value: function (s, o) { var l = void 0; typeof Event == "function" ? l = new Event(o) : (l = document.createEvent("Event"), l.initEvent(o, !0, !0)), s.dispatchEvent(l); } }, { key: "getElementByAttribute", value: function (s, o) { return o ? document.querySelector("[" + s + '="' + o + '"]') : document.querySelector("[" + s + "]"); } }, { key: "getElementsByAttribute", value: function (s, o) { return o ? document.querySelectorAll("[" + s + '="' + o + '"]') : document.querySelectorAll("[" + s + "]"); } }, { key: "getElementByAttributeWithinElement", value: function (s, o, l) { return l ? s.querySelector("[" + o + '="' + l + '"]') : s.querySelector("[" + o + "]"); } }, { key: "isMouseOver", value: function (s) { return Array.prototype.slice.call(s.parentElement.querySelectorAll(":hover")).filter(function () { return s[0] == this; }).length > 0; } }, { key: "getElementsByAttributeWithinElement", value: function (s, o, l) { return l ? s.querySelectorAll("[" + o + '="' + l + '"]') : s.querySelectorAll("[" + o + "]"); } }, { key: "getElementByClassWithinElement", value: function (s, o) { return s.querySelector("." + o); } }, { key: "maxWidthMobileViewports", value: function () { return 940; } }, { key: "createEvent", value: function (s) { var o = void 0; return typeof Event == "function" ? o = new Event(s) : (o = document.createEvent("Event"), o.initEvent(s, !0, !0)), o; } }, { key: "isDesktop", value: function () { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } }, { key: "isIE11", value: function () { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } }, { key: "getKeyCodeOnKeyDownEvent", value: function (s) { var o = void 0; if (s != null) if (s.code === void 0) switch (s.keyCode) { case 13: o = "Enter"; break; case 38: o = "ArrowUp"; break; case 40: o = "ArrowDown"; break; case 8: o = "Backspace"; break; case 9: o = "Tab"; break; case 27: o = "Escape"; break; case 33: o = "PageUp"; break; case 34: o = "PageDown"; break; case 32: o = "Space"; break; default: o = void 0; } else o = s.code; return o; } }, { key: "getKeyboardFocusableElements", value: function (s) { return [].concat(H(s.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])'))).filter(function (o) { return !function (l) { return window.getComputedStyle(l).visibility === "hidden"; }(o) && !o.hasAttribute("disabled") && !o.getAttribute("aria-hidden"); }); } }]), r; }(); }, 117: function (e, t, r) { e.exports = r(118); }, 118: function (e, t, r) { "use strict"; r.r(t), r.d(t, "Popover", function () { return l; }); var n = r(0), s = r.n(n), o = r(2), l = function () { function d(c) { k(this, d), this.element = c, this.trigger = s.a.getElementByAttribute(this.attributes.trigger, this.element.getAttribute("data-rs-popover")), this.overlay = s.a.getElementByAttribute(this.attributes.overlay), this.disableOverlay = this.element.hasAttribute(this.attributes.disableOverlay), this.popoverOpen, this.addEventHandlers(), this.isOpenByDefault(), this.keystroke = 0; } return O(d, [{ key: "addEventHandlers", value: function () { var a = this; this.trigger && this.trigger.addEventListener("click", function () { a.popoverOpen ? a.closePopover(a.popoverOpen) : a.openPopover(a.element), a.toggleActiveClassOnTrigger(); }), this.overlay && !this.disableOverlay && this.popoverOpen ? this.overlay.addEventListener("click", function () { a.closePopover(a.popoverOpen), a.trigger && a.toggleActiveClassOnTrigger(); }) : window.addEventListener("click", function (u) { a.popoverOpen && (a.trigger && a.trigger.contains(u.target) || a.popoverOpen.contains(u.target) || (a.closePopover(a.popoverOpen), a.trigger && a.toggleActiveClassOnTrigger())); }), document.addEventListener("keydown", function (u) { a.handleButtonKeys(u); }); } }, { key: "isOpenByDefault", value: function () { return this.element.classList.contains(this.classes.popoverActive) ? this.popoverOpen = this.element : null; } }, { key: "openPopover", value: function (a) { a && (a.classList.add(this.classes.popoverActive), a.removeAttribute(this.attributes.hidden), this.overlay === null || this.disableOverlay || this.overlay.classList.add(this.classes.modalOverlayActive), this.popoverOpen = a); } }, { key: "closePopover", value: function (a) { a && (a.classList.remove(this.classes.popoverActive), a.setAttribute(this.attributes.hidden, "true"), this.overlay && !this.disableOverlay && this.overlay.classList.remove(this.classes.modalOverlayActive), this.popoverOpen = !1, this.keystroke = 0); } }, { key: "toggleActiveClassOnTrigger", value: function () { this.trigger.classList.contains(this.classes.active) ? this.trigger.classList.remove(this.classes.active) : this.trigger.classList.add(this.classes.active); } }, { key: "handleButtonKeys", value: function (a) { if (a != null) switch (s.a.getKeyCodeOnKeyDownEvent(a)) { case "Tab": Object(o.a)(a, this.element, this.popoverOpen, this.keystroke), this.popoverOpen && this.keystroke++; break; case "Escape": this.popoverOpen && (this.closePopover(this.popoverOpen), this.trigger && this.trigger.focus()); } } }, { key: "classes", get: function () { return { popoverActive: "popover--active", modalOverlayActive: "modal__overlay--active", active: "active" }; } }, { key: "attributes", get: function () { return { overlay: "data-rs-popover-overlay", trigger: "data-rs-popover-trigger", disableOverlay: "data-rs-popover-disable-overlay", hidden: "aria-hidden" }; } }], [{ key: "getSelector", value: function () { return "[data-rs-popover]"; } }]), d; }(); }, 2: function (e, t, r) { "use strict"; var n = r(0), s = r.n(n); t.a = function (o, l, d) { var c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, a = s.a.getKeyboardFocusableElements(l), u = a[0], v = a[a.length - 1]; if (d) { if (v.tagName && v.tagName === "IFRAME") { var b = document.createElement("div"); b.setAttribute("tabindex", "0"), v.parentNode.insertBefore(b, v.nextSibling); } if (u.tagName && u.tagName === "IFRAME") { var h = document.createElement("div"); h.setAttribute("tabindex", "0"), v.parentNode.insertBefore(h, v.nextSibling), u.parentNode.insertBefore(h, u); } c < 1 && (o.preventDefault(), setTimeout(function () { u.focus(); }, 100)), o.shiftKey ? document.activeElement === u && (o.preventDefault(), v.focus()) : document.activeElement === v && (o.preventDefault(), u.focus()); } }; } })); }); var x = E((V, P) => { var B = class { static triggerEvent(e, t) { let r; typeof Event == "function" ? r = new Event(t) : (r = document.createEvent("Event"), r.initEvent(t, !0, !0)), e.dispatchEvent(r); } static getElementByAttribute(e, t) { return t ? document.querySelector(`[${e}="${t}"]`) : document.querySelector(`[${e}]`); } static getElementsByAttribute(e, t) { return t ? document.querySelectorAll(`[${e}="${t}"]`) : document.querySelectorAll(`[${e}]`); } static getElementByAttributeWithinElement(e, t, r) { return r ? e.querySelector(`[${t}="${r}"]`) : e.querySelector(`[${t}]`); } static isMouseOver(e) { return Array.prototype.slice.call(e.parentElement.querySelectorAll(":hover")).filter(function () { return e[0] == this; }).length > 0; } static getElementsByAttributeWithinElement(e, t, r) { return r ? e.querySelectorAll(`[${t}="${r}"]`) : e.querySelectorAll(`[${t}]`); } static getElementByClassWithinElement(e, t) { return e.querySelector(`.${t}`); } static maxWidthMobileViewports() { return 940; } static createEvent(e) { let t; return typeof Event == "function" ? t = new Event(e) : (t = document.createEvent("Event"), t.initEvent(e, !0, !0)), t; } static isDesktop() { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } static isIE11() { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } static getKeyCodeOnKeyDownEvent(e) { let t; if (e != null) if (typeof e.code == "undefined") switch (e.keyCode) { case 13: t = "Enter"; break; case 38: t = "ArrowUp"; break; case 40: t = "ArrowDown"; break; case 8: t = "Backspace"; break; case 9: t = "Tab"; break; case 27: t = "Escape"; break; case 33: t = "PageUp"; break; case 34: t = "PageDown"; break; case 32: t = "Space"; break; default: t = void 0; break; } else t = e.code; return t; } static getKeyboardFocusableElements(e) { let t = (r) => window.getComputedStyle(r).visibility === "hidden"; return [...e.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])')].filter((r) => !t(r) && !r.hasAttribute("disabled") && !r.getAttribute("aria-hidden")); } }; P.exports = B; }); var L = A(w()), q = A(x()), p = class extends L.Popover { constructor(e) { super(e); this.closeButtons = e.querySelectorAll("[data-rs-popover-button-close]"), this.triggerParent = this.trigger.offsetParent, this.addAdditionalEventHandlers(); } get classes() { return { popoverActive: "popover--active", modalOverlayActive: "modal__overlay--active", active: "active", triggerActive: "trigger--active" }; } addAdditionalEventHandlers() { this.trigger !== null && this.trigger.addEventListener("click", (e) => { e.preventDefault(), document.querySelectorAll(`[${this.attributes.trigger}].${this.classes.triggerActive}`).forEach((r) => { q.default.getElementByAttribute("data-rs-popover", r.getAttribute(this.attributes.trigger)).classList.remove(this.classes.popoverActive), r.classList.remove(this.classes.triggerActive); }); }), this.closeButtons && this.closeButtons.forEach((e) => { e.addEventListener("click", () => { this.closePopover(this.popoverOpen); }); }); } addEventHandlers() { this.trigger && this.trigger.addEventListener("click", (e) => { e.preventDefault(), this.popoverOpen ? this.closePopover(this.popoverOpen) : this.openPopover(this.element), this.toggleActiveClassOnTrigger(); }), this.overlay && !this.disableOverlay && this.popoverOpen ? this.overlay.addEventListener("click", () => { this.closePopover(this.popoverOpen), this.trigger && this.toggleActiveClassOnTrigger(); }) : window.addEventListener("click", (e) => { if (!!this.popoverOpen) { var t = e.target.hasAttribute("data-rs-auto-suggest-list-value"), r = e.target.parentElement ? e.target.parentElement.hasAttribute("data-rs-auto-suggest-list-value") : !1, n = t || r; this.trigger && this.trigger.contains(e.target) || this.popoverOpen.contains(e.target) || n || (this.closePopover(this.popoverOpen), this.trigger && this.toggleActiveClassOnTrigger()); } }), document.addEventListener("keydown", (e) => { this.handleButtonKeys(e); }); } openPopover(e) { !e || (e.classList.add(this.classes.popoverActive), e.removeAttribute(this.attributes.hidden), this.triggerParent && this.triggerParent.classList.add(this.classes.triggerActive), this.overlay !== null && !this.disableOverlay && this.overlay.classList.add(this.classes.modalOverlayActive), this.popoverOpen = e); } closePopover(e) { !e || (e.classList.remove(this.classes.popoverActive), e.setAttribute(this.attributes.hidden, "true"), this.triggerParent && this.triggerParent.classList.remove(this.classes.triggerActive), this.overlay && !this.disableOverlay && this.overlay.classList.remove(this.classes.modalOverlayActive), this.popoverOpen = !1, this.keystroke = 0); } }; var m = document.querySelectorAll(`${p.getSelector()}:not([data-rs-popover="login-popover"])`); if (m.length) for (g = 0; g < m.length; g++)new p(m[g]); var g, f = document.getElementById("navigationPopup"), I = { attributes: !0, childList: !0, subtree: !0 }; function C() { var i = document.querySelector("#navigationPopup [data-rs-popover]"); new p(i); } var F = (i, e) => { for (let t = 0; t < i.length; t++)if (i[t].type === "childList") { C(), e.disconnect(); break; } }; f != null && f.querySelector('[data-rs-popover="login-popover"]') ? C() : f && new MutationObserver(F).observe(f, I); })();;
(() => { var r = "data-rs-toggable-target", s = class { constructor() { } static toggle(t, e) { if (typeof t == "undefined" || !t) return; let l = t.getAttribute(r); typeof l != "undefined" && l && document.querySelectorAll(l).forEach(e === !0 ? s.enable : s.disable); } static enable(t) { t.removeAttribute("hidden"); } static disable(t) { t.setAttribute("hidden", ""); } }; var n = "data-rs-toggable", a = class { constructor(t) { this.element = t; let e = this.element.dataset.rsToggable; this.state = Object.values(this.states).indexOf(e) > -1 ? this.element.dataset.rsToggable : this.states.inactive, this.addEventHandlers(), this.disableEvents = [], this.initialize(); } get classes() { return { iconTogglerActive: "icon__toggler--active" }; } get states() { return { active: "active", inactive: "inactive" }; } initialize() { this.setClass(); } addEventHandlers() { ["click", "keydown"].forEach((t) => { this.element.addEventListener(t, (e) => { (e.type === "keydown" && (e.keyCode === 13 || e.keyCode === 32) || e.type === "click") && (e.preventDefault(), this.toggleState()); }); }); } toggleState() { this.state = this.state === this.states.active ? this.states.inactive : this.states.active, this.setClass(), s.toggle(this.element, this.state === this.states.active); } setClass() { this.state === this.states.active ? this.element.classList.add(this.classes.iconTogglerActive) : this.element.classList.remove(this.classes.iconTogglerActive); } static getSelector() { return `[${n}]`; } }; var o = document.querySelectorAll(a.getSelector()); if (o.length) for (i = 0; i < o.length; i++)new a(o[i]); var i; })();;
(() => {
    var C = Object.create; var m = Object.defineProperty; var T = Object.getOwnPropertyDescriptor; var D = Object.getOwnPropertyNames; var _ = Object.getPrototypeOf, q = Object.prototype.hasOwnProperty; var O = (u) => m(u, "__esModule", { value: !0 }); var p = (u, n) => () => (n || u((n = { exports: {} }).exports, n), n.exports); var M = (u, n, i) => { if (n && typeof n == "object" || typeof n == "function") { for (let t of D(n)) !q.call(u, t) && t !== "default" && m(u, t, { get: () => n[t], enumerable: !(i = T(n, t)) || i.enumerable }); } return u; }, y = (u) => M(O(m(u != null ? C(_(u)) : {}, "default", u && u.__esModule && "default" in u ? { get: () => u.default, enumerable: !0 } : { value: u, enumerable: !0 })), u); var k = p((N, B) => { var E = class { static triggerEvent(n, i) { let t; typeof Event == "function" ? t = new Event(i) : (t = document.createEvent("Event"), t.initEvent(i, !0, !0)), n.dispatchEvent(t); } static getElementByAttribute(n, i) { return i ? document.querySelector(`[${n}="${i}"]`) : document.querySelector(`[${n}]`); } static getElementsByAttribute(n, i) { return i ? document.querySelectorAll(`[${n}="${i}"]`) : document.querySelectorAll(`[${n}]`); } static getElementByAttributeWithinElement(n, i, t) { return t ? n.querySelector(`[${i}="${t}"]`) : n.querySelector(`[${i}]`); } static isMouseOver(n) { return Array.prototype.slice.call(n.parentElement.querySelectorAll(":hover")).filter(function () { return n[0] == this; }).length > 0; } static getElementsByAttributeWithinElement(n, i, t) { return t ? n.querySelectorAll(`[${i}="${t}"]`) : n.querySelectorAll(`[${i}]`); } static getElementByClassWithinElement(n, i) { return n.querySelector(`.${i}`); } static maxWidthMobileViewports() { return 940; } static createEvent(n) { let i; return typeof Event == "function" ? i = new Event(n) : (i = document.createEvent("Event"), i.initEvent(n, !0, !0)), i; } static isDesktop() { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } static isIE11() { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } static getKeyCodeOnKeyDownEvent(n) { let i; if (n != null) if (typeof n.code == "undefined") switch (n.keyCode) { case 13: i = "Enter"; break; case 38: i = "ArrowUp"; break; case 40: i = "ArrowDown"; break; case 8: i = "Backspace"; break; case 9: i = "Tab"; break; case 27: i = "Escape"; break; case 33: i = "PageUp"; break; case 34: i = "PageDown"; break; case 32: i = "Space"; break; default: i = void 0; break; } else i = n.code; return i; } static getKeyboardFocusableElements(n) { let i = (t) => window.getComputedStyle(t).visibility === "hidden"; return [...n.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])')].filter((t) => !i(t) && !t.hasAttribute("disabled") && !t.getAttribute("aria-hidden")); } }; B.exports = E; }); var L = p((x) => {
        "use strict"; var A = function () { function u(n, i) { for (var t = 0; t < i.length; t++) { var r = i[t]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(n, r.key, r); } } return function (n, i, t) { return i && u(n.prototype, i), t && u(n, t), n; }; }(), I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (u) { return typeof u; } : function (u) { return u && typeof Symbol == "function" && u.constructor === Symbol && u !== Symbol.prototype ? "symbol" : typeof u; }; function W(u) { if (Array.isArray(u)) { for (var n = 0, i = Array(u.length); n < u.length; n++)i[n] = u[n]; return i; } else return Array.from(u); } function S(u, n) { if (!(u instanceof n)) throw new TypeError("Cannot call a class as a function"); } (function (u, n) { for (var i in n) u[i] = n[i]; })(x, function (u) { var n = {}; function i(t) { if (n[t]) return n[t].exports; var r = n[t] = { i: t, l: !1, exports: {} }; return u[t].call(r.exports, r, r.exports, i), r.l = !0, r.exports; } return i.m = u, i.c = n, i.d = function (t, r, a) { i.o(t, r) || Object.defineProperty(t, r, { enumerable: !0, get: a }); }, i.r = function (t) { typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }); }, i.t = function (t, r) { if (1 & r && (t = i(t)), 8 & r || 4 & r && (typeof t == "undefined" ? "undefined" : I(t)) == "object" && t && t.__esModule) return t; var a = Object.create(null); if (i.r(a), Object.defineProperty(a, "default", { enumerable: !0, value: t }), 2 & r && typeof t != "string") for (var s in t) i.d(a, s, function (h) { return t[h]; }.bind(null, s)); return a; }, i.n = function (t) { var r = t && t.__esModule ? function () { return t.default; } : function () { return t; }; return i.d(r, "a", r), r; }, i.o = function (t, r) { return Object.prototype.hasOwnProperty.call(t, r); }, i.p = "", i(i.s = 86); }({
            0: function (n, i) { n.exports = function () { function t() { S(this, t); } return A(t, null, [{ key: "triggerEvent", value: function (a, s) { var h = void 0; typeof Event == "function" ? h = new Event(s) : (h = document.createEvent("Event"), h.initEvent(s, !0, !0)), a.dispatchEvent(h); } }, { key: "getElementByAttribute", value: function (a, s) { return s ? document.querySelector("[" + a + '="' + s + '"]') : document.querySelector("[" + a + "]"); } }, { key: "getElementsByAttribute", value: function (a, s) { return s ? document.querySelectorAll("[" + a + '="' + s + '"]') : document.querySelectorAll("[" + a + "]"); } }, { key: "getElementByAttributeWithinElement", value: function (a, s, h) { return h ? a.querySelector("[" + s + '="' + h + '"]') : a.querySelector("[" + s + "]"); } }, { key: "isMouseOver", value: function (a) { return Array.prototype.slice.call(a.parentElement.querySelectorAll(":hover")).filter(function () { return a[0] == this; }).length > 0; } }, { key: "getElementsByAttributeWithinElement", value: function (a, s, h) { return h ? a.querySelectorAll("[" + s + '="' + h + '"]') : a.querySelectorAll("[" + s + "]"); } }, { key: "getElementByClassWithinElement", value: function (a, s) { return a.querySelector("." + s); } }, { key: "maxWidthMobileViewports", value: function () { return 940; } }, { key: "createEvent", value: function (a) { var s = void 0; return typeof Event == "function" ? s = new Event(a) : (s = document.createEvent("Event"), s.initEvent(a, !0, !0)), s; } }, { key: "isDesktop", value: function () { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } }, { key: "isIE11", value: function () { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } }, { key: "getKeyCodeOnKeyDownEvent", value: function (a) { var s = void 0; if (a != null) if (a.code === void 0) switch (a.keyCode) { case 13: s = "Enter"; break; case 38: s = "ArrowUp"; break; case 40: s = "ArrowDown"; break; case 8: s = "Backspace"; break; case 9: s = "Tab"; break; case 27: s = "Escape"; break; case 33: s = "PageUp"; break; case 34: s = "PageDown"; break; case 32: s = "Space"; break; default: s = void 0; } else s = a.code; return s; } }, { key: "getKeyboardFocusableElements", value: function (a) { return [].concat(W(a.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])'))).filter(function (s) { return !function (h) { return window.getComputedStyle(h).visibility === "hidden"; }(s) && !s.hasAttribute("disabled") && !s.getAttribute("aria-hidden"); }); } }]), t; }(); }, 2: function (n, i, t) { "use strict"; var r = t(0), a = t.n(r); i.a = function (s, h, v) { var c = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, e = a.a.getKeyboardFocusableElements(h), o = e[0], l = e[e.length - 1]; if (v) { if (l.tagName && l.tagName === "IFRAME") { var d = document.createElement("div"); d.setAttribute("tabindex", "0"), l.parentNode.insertBefore(d, l.nextSibling); } if (o.tagName && o.tagName === "IFRAME") { var b = document.createElement("div"); b.setAttribute("tabindex", "0"), l.parentNode.insertBefore(b, l.nextSibling), o.parentNode.insertBefore(b, o); } c < 1 && (s.preventDefault(), setTimeout(function () { o.focus(); }, 100)), s.shiftKey ? document.activeElement === o && (s.preventDefault(), l.focus()) : document.activeElement === l && (s.preventDefault(), o.focus()); } }; }, 86: function (n, i, t) { n.exports = t(87); }, 87: function (n, i, t) {
                "use strict"; t.r(i), t.d(i, "Chat", function () { return h; }); var r = t(0), a = t.n(r), s = t(2), h = function () {
                    function v(c) { S(this, v), this.element = c, this.amountTagsChecked, this.box = a.a.getElementsByAttribute(this.attributes.box), this.button = a.a.getElementByAttribute(this.attributes.button), this.close = a.a.getElementByAttribute(this.attributes.close), this.header = a.a.getElementByAttribute(this.attributes.header), this.inputDialog = a.a.getElementByAttribute(this.attributes.input), this.languageNotification = a.a.getElementByAttribute(this.attributes.languageNotification), this.languageSaveButton = a.a.getElementByAttribute(this.attributes.languageSaveButton), this.languageSelector = a.a.getElementByAttribute(this.attributes.languageSelector), this.minimized = a.a.getElementByAttribute(this.attributes.minimized), this.popup = a.a.getElementByAttribute(this.attributes.popup), this.popupHide = a.a.getElementsByAttribute(this.attributes.popupHide), this.popupShow = a.a.getElementByAttribute(this.attributes.popupShow), this.quickSuggestButton, this.saveLanguageButton = a.a.getElementByAttribute(this.attributes.languageSaveButton), this.main = a.a.getElementByAttribute(this.attributes.main), this.settings = a.a.getElementByAttribute(this.attributes.settings), this.settingsButton = a.a.getElementsByAttribute(this.attributes.settingsButton), this.tagsChecked = [], this.tagDialog = a.a.getElementByAttribute(this.attributes.tagsDialog), this.textarea = a.a.getElementByAttribute(this.attributes.textarea), this.deselectButton = a.a.getElementByAttribute(this.attributes.deselectButton), this.submitButton = a.a.getElementByAttribute(this.attributes.submitButton), this.elementIsOpen, this.keystroke = 0, this.addEventHandlers(); } return A(v, [{ key: "addEventHandlers", value: function () { var e = this; this.handleHeaderDivider(), this.toggleInputButton(), this.quickSuggestButtonsHandler(), this.tagHandler(), this.close.addEventListener("click", function (o) { e.closeChat(o); }), this.minimized.addEventListener("click", function () { e.openChat(); }), this.userInputToSpeechBubble(), this.toggleSettingsHandler(), this.languageSelectorHandler(), this.popUpHandler(), this.languageSaveButtonHandler(), document.addEventListener("keydown", function (o) { e.handleButtonKeys(o); }); } }, { key: "handleHeaderDivider", value: function () { var e = this; this.box.forEach(function (o) { o.addEventListener("scroll", function () { var l = o.scrollTop, d = o.previousElementSibling.classList; l > 1 ? d.remove(e.classes.dividerIsHidden) : d.add(e.classes.dividerIsHidden); }); }); } }, { key: "toggleInputButton", value: function () { var e = this; this.textarea.addEventListener("input", function () { e.textarea.value.trim().length === 0 ? e.button.disabled = !0 : e.button.disabled = !1; }); } }, { key: "openChat", value: function () { this.minimized && (this.minimized.classList.add(this.classes.displayNone), this.element.classList.remove(this.classes.displayNone), this.elementIsOpen = !0); } }, { key: "closeChat", value: function (e) { this.close && this.minimized && (e.preventDefault(), this.element.classList.add(this.classes.displayNone), this.minimized.classList.remove(this.classes.displayNone), this.elementIsOpen = !1, this.keystroke = 0); } }, {
                        key: "quickSuggestButtonsHandler", value: function () {
                            var e = this; this.quickSuggestButton = a.a.getElementsByAttribute(this.attributes.quickSuggestButton), this.quickSuggestButton && this.quickSuggestButton.forEach(function (o) {
                                o.addEventListener("click", function () {
                                    var l = o.innerHTML, d = o.parentElement; d.removeAttribute(e.attributes.quickSuggest), d.setAttribute(e.attributes.content, "user"), d.innerHTML = `<div class="chat__content chat__content--user speech-bubble speech-bubble--user">
            `+ l + `
          </div>`, e.box.scrollTop = e.box.scrollHeight;
                                });
                            });
                        }
                    }, { key: "getArrayOfSelectedTags", value: function (e) { if (e.target.checked) this.tagsChecked.push(e.target.value); else { var o = this.tagsChecked.indexOf(e.target.value); o !== -1 && this.tagsChecked.splice(o, 1); } this.amountTagsChecked = this.tagsChecked.length; } }, { key: "tagHandler", value: function () { var e = this; if (this.tags = a.a.getElementByAttribute(this.attributes.tags), !!this.tags) { for (var o = a.a.getElementsByAttributeWithinElement(this.tags, "data-rs-tags-checkbox"), l = a.a.getElementByAttribute(this.attributes.tagsDialogLabel), d = l ? l.getAttribute(this.attributes.tagsDialogLabel) : "@tag selected", b = 0; o[b]; b++)o[b].addEventListener("change", function (w) { e.getArrayOfSelectedTags(w), e.amountTagsChecked > 0 ? (e.tagDialog.classList.remove("hidden"), e.inputDialog.classList.add("hidden"), e.textarea.setAttribute("aria-hidden", !0), e.button.setAttribute("aria-hidden", !0), e.deselectButton.removeAttribute("aria-hidden"), e.submitButton.removeAttribute("aria-hidden"), l.innerText = d.replace("@tag", e.amountTagsChecked)) : (e.tagDialog.classList.add("hidden"), e.inputDialog.classList.remove("hidden"), e.textarea.removeAttribute("aria-hidden"), e.button.removeAttribute("aria-hidden"), e.deselectButton.setAttribute("aria-hidden", !0), e.submitButton.setAttribute("aria-hidden", !0)); }); this.handleTagDialogButtons(); } } }, {
                        key: "handleTagDialogButtons", value: function () {
                            var e = this, o = a.a.getElementsByAttributeWithinElement(this.tags, "data-rs-tags-checkbox"); this.deselectButton.addEventListener("click", function () { e.tagsChecked = [], o.forEach(function (l) { l.checked && l.click(); }), o[0].focus(); }), this.submitButton.addEventListener("click", function () {
                                var l = e.tagsChecked.join(", "); e.tags.setAttribute(e.attributes.content, "user"), e.tags.removeAttribute(e.attributes.tags), e.tags.innerHTML = `<div class="chat__content chat__content--user speech-bubble speech-bubble--user">
            `+ l + `
          </div>`, e.tagDialog.classList.add("hidden"), e.inputDialog.classList.remove("hidden"), e.box.scrollTop = e.box.scrollHeight, e.submitButton.setAttribute("aria-hidden", !0), e.deselectButton.setAttribute("aria-hidden", !0), e.textarea.removeAttribute("aria-hidden"), e.button.removeAttribute("aria-hidden"), e.textarea.focus();
                            });
                        }
                    }, {
                        key: "createSpeechBubble", value: function (e) {
                            if (e.type === "click" || e.key === "Enter") {
                                var o = this.textarea.value, l = a.a.getElementByAttribute(this.attributes.quickSuggest); l && l.remove(), this.tags && this.tags.remove(); var d = a.a.getElementByAttribute(this.attributes.box, "chat"); d.innerHTML = d.innerHTML += `<div class='chat-content__wrapper' data-rs-chat-content='user'><div class="chat__content chat__content--user speech-bubble speech-bubble--user">
      `+ o + "</div></div>", d.lastElementChild && d.lastElementChild.getAttribute(this.attributes.content) === "bot" && d.lastElementChild.classList.add("chat-content__wrapper--first"), this.textarea.value = "", this.textarea.style.height = "auto", this.button.disabled = !0, d.scrollTop = d.scrollHeight;
                            }
                        }
                    }, { key: "userInputToSpeechBubble", value: function () { var e = this; this.button.addEventListener("click", function (o) { e.createSpeechBubble(o), e.textarea.focus(); }), this.textarea.addEventListener("keydown", function (o) { e.createSpeechBubble(o), e.textarea.focus(); }); } }, { key: "toggleSettingsHandler", value: function () { var e = this; this.settingsButton.forEach(function (o) { o.addEventListener("click", function () { e.openAndCloseSettings(); }); }); } }, { key: "languageSelectorHandler", value: function () { var e = this; this.languageSelector.addEventListener("change", function () { e.languageSelector.value !== "" ? (e.languageSaveButton.removeAttribute("disabled"), e.languageNotification.classList.remove("display-none")) : (e.languageSaveButton.setAttribute("disabled", "disabled"), e.languageNotification.classList.add("display-none")); }); } }, { key: "popUpHandler", value: function () { var e = this, o = []; this.popupShow.addEventListener("click", function () { return e.popup.classList.add("is-active"), o = a.a.getKeyboardFocusableElements(e.settings), o.forEach(function (l) { l.setAttribute("aria-hidden", !0); }), o; }), this.popupHide.forEach(function (l) { l.addEventListener("click", function () { e.popup.classList.remove("is-active"), o.forEach(function (d) { return d.removeAttribute("aria-hidden"); }), e.settingsButton.focus(); }); }); } }, { key: "languageSaveButtonHandler", value: function () { var e = this; this.saveLanguageButton.addEventListener("click", function () { a.a.getElementByAttribute(e.attributes.box, "chat").innerHTML = "", e.openAndCloseSettings(); }); } }, { key: "openAndCloseSettings", value: function () { var e = this, o = this.settings.classList; o.contains(this.classes.isActive) ? (this.main.classList.remove("hidden"), o.remove(this.classes.isActive), this.settingsButton[0].focus()) : (o.add(this.classes.isActive), setTimeout(function () { e.main.classList.add("hidden"); }, 500)); } }, { key: "handleButtonKeys", value: function (e) { if (e != null) switch (a.a.getKeyCodeOnKeyDownEvent(e)) { case "Escape": this.elementIsOpen && this.closeChat(e); break; case "Tab": var o = this.main.classList.contains("hidden") ? this.settings : this.main; Object(s.a)(e, o, this.elementIsOpen, this.keystroke), this.elementIsOpen && this.keystroke++; } } }, { key: "classes", get: function () { return { dividerIsHidden: "divider--is-hidden", displayNone: "display-none", isActive: "is-active" }; } }, { key: "attributes", get: function () { return { box: "data-rs-chat-box", button: "data-rs-chat-button", close: "data-rs-chat-close", main: "data-rs-chat-main", content: "data-rs-chat-content", deselectButton: "data-rs-chat-tags-deselect-button", header: "data-rs-chat-header", input: "data-rs-chat-input", languageNotification: "data-rs-chat-language-notification", languageSaveButton: "data-rs-chat-language-save-button", languageSelector: "data-rs-chat-language-selector", minimized: "data-rs-chat-minimized", popup: "data-rs-chat-popup", popupHide: "data-rs-chat-popup-hide", popupShow: "data-rs-chat-popup-show", quickSuggest: "data-rs-chat-quick-suggest", quickSuggestButton: "data-rs-chat-quick-suggest-button", saveLanguageButton: "data-rs-chat-save-language", settings: "data-rs-chat-settings", settingsButton: "data-rs-chat-settings-button", submitButton: "data-rs-chat-tags-submit-button", tags: "data-rs-chat-tags", tagsDialog: "data-rs-chat-tags-dialog", tagsDialogLabel: "data-rs-chat-tags-dialog-label", textarea: "data-rs-chat-textarea" }; } }], [{ key: "getSelector", value: function () { return "[data-rs-chat]"; } }]), v;
                }();
            }
        }));
    }); var g = y(k()), H = y(L()), f = class extends H.Chat {
        addEventHandlers() { this.handleHeaderDivider(), this.toggleInputButton(), this.quickSuggestButtonsHandler(), this.close.addEventListener("click", (n) => { this.closeChat(n); }), this.minimized.addEventListener("click", () => { this.openChat(); }), this.toggleSettingsHandler(), this.languageSelectorHandler(), this.popUpHandler(), this.languageSaveButtonHandler(), this.tagHandler(), document.addEventListener("keydown", (n) => { this.handleButtonKeys(n); }); } toggleInputButton() { this.textarea.addEventListener("input", () => { this.textarea.value.trim().length === 0 ? this.button.disabled = !0 : this.button.disabled = !1; }); } quickSuggestButtonsHandler() {
            this.quickSuggestButton = g.default.getElementsByAttribute(this.attributes.quickSuggestButton), this.quickSuggestButton && this.quickSuggestButton.forEach((n) => {
                n.addEventListener("click", () => {
                    let i = n.innerHTML, t = n.parentElement; t && (t.removeAttribute(this.attributes.content), t.removeAttribute(this.attributes.quickSuggest), t.setAttribute(this.attributes.content, "user"), t.innerHTML = `<div class="chat__content chat__content--user speech-bubble speech-bubble--user">
            ${i}
          </div>`), this.box.scrollTop = this.box.scrollHeight;
                });
            });
        } userInputToSpeechBubble() {
            let n = this.textarea.value, i = g.default.getElementByAttribute(this.attributes.quickSuggest); i && i.remove(); let t = g.default.getElementByAttribute(this.attributes.box, "chat"); t.innerHTML = t.innerHTML += `<div class='chat-content__wrapper' data-rs-chat-content='user'><div class="chat__content chat__content--user speech-bubble speech-bubble--user">
    ${n}</div></div>`, t.lastElementChild && t.lastElementChild.getAttribute(this.attributes.content) === "bot" && t.lastElementChild.classList.add("chat-content__wrapper--first"), this.textarea.value = "", this.textarea.style.height = "auto", this.button.disabled = !0, t.scrollTop = t.scrollHeight, this.textarea.focus();
        } tagHandler(n) { if (n ? this.tags = g.default.getElementsByAttributeWithinElement(n, this.attributes.tags)[0] : this.tags = g.default.getElementByAttribute(this.attributes.tags), !this.tags) return; let i = g.default.getElementsByAttributeWithinElement(this.tags, "data-rs-tags-checkbox"), t = g.default.getElementByAttribute(this.attributes.tagsDialogLabel), r = t ? t.getAttribute(this.attributes.tagsDialogLabel) : "@tag selected"; for (let a = 0; i[a]; a++)i[a].addEventListener("change", (s) => { this.getArrayOfSelectedTags(s), this.amountTagsChecked > 0 ? (this.tagDialog.classList.remove("hidden"), this.inputDialog.classList.add("hidden"), this.textarea.setAttribute("aria-hidden", !0), this.button.setAttribute("aria-hidden", !0), this.deselectButton.removeAttribute("aria-hidden"), this.submitButton.removeAttribute("aria-hidden"), t.innerText = r.replace("@tag", this.amountTagsChecked)) : (this.tagDialog.classList.add("hidden"), this.inputDialog.classList.remove("hidden"), this.textarea.removeAttribute("aria-hidden"), this.button.removeAttribute("aria-hidden"), this.deselectButton.setAttribute("aria-hidden", !0), this.submitButton.setAttribute("aria-hidden", !0)); }); this.handleTagDialogButtons(); } handleTagDialogButtons() { let n = g.default.getElementByAttribute(this.attributes.deselectButton), i = g.default.getElementsByAttributeWithinElement(this.tags, "data-rs-tags-checkbox"); this.deselectButton.addEventListener("click", () => { this.tagsChecked = [], i.forEach((t) => { t.checked && t.click(); }); }); } multiSelectSubmitButton() {
            let n = this.tagsChecked.join(", "); this.tags.setAttribute(this.attributes.content, "user"), this.tags.removeAttribute(this.attributes.tags), this.tags.innerHTML = `<div class="chat__content chat__content--user speech-bubble speech-bubble--user">
          ${n}
        </div>`, this.tagDialog.classList.add("hidden"), this.inputDialog.classList.remove("hidden"), this.box.scrollTop = this.box.scrollHeight, this.submitButton.setAttribute("aria-hidden", !0), this.deselectButton.setAttribute("aria-hidden", !0), this.textarea.removeAttribute("aria-hidden"), this.button.removeAttribute("aria-hidden"), this.textarea.focus();
        } languageSaveButtonHandler() { this.saveLanguageButton.addEventListener("click", () => { let n = g.default.getElementByAttribute(this.attributes.deselectButton); this.amountTagsChecked > 0 && n.click(); let i = g.default.getElementByAttribute(this.attributes.box, "chat"); i.innerHTML = "", this.openAndCloseSettings(); }); }
    }; var K = (u) => { window.orbit.chatInstance = new f(u); }; window.orbit = window.orbit || {}; window.orbit.chat = K;
})();;
(() => { function A(e, t, n) { if (n) { var a = document.createDocumentFragment(), r = !t.hasAttribute("viewBox") && n.getAttribute("viewBox"); r && t.setAttribute("viewBox", r); for (var g = n.cloneNode(!0); g.childNodes.length;)a.appendChild(g.firstChild); e.appendChild(a); } } function E(e) { e.onreadystatechange = function () { if (e.readyState === 4) { var t = e._cachedDocument; t || (t = e._cachedDocument = document.implementation.createHTMLDocument(""), t.body.innerHTML = e.responseText, e._cachedTarget = {}), e._embeds.splice(0).map(function (n) { var a = e._cachedTarget[n.id]; a || (a = e._cachedTarget[n.id] = t.getElementById(n.id)), A(n.parent, n.svg, a); }); } }, e.onreadystatechange(); } function N() { function e() { for (var s = 0; s < l.length;) { var o = l[s], u = o.parentNode, b = _(u), d = o.getAttribute("xlink:href") || o.getAttribute("href"); if (!d && n.attributeName && (d = o.getAttribute(n.attributeName)), b && d) { if (t) if (!n.validate || n.validate(d, b, o)) { u.removeChild(o); var v = d.split("#"), m = v.shift(), p = v.join("#"); if (m.length) { var i = f[m]; i || (i = f[m] = new XMLHttpRequest(), i.open("GET", m), i.send(), i._embeds = []), i._embeds.push({ parent: u, svg: b, id: p }), E(i); } else A(u, b, document.getElementById(p)); } else ++s, ++c; } else ++s; } (!l.length || l.length - c > 0) && T(e, 67); } var t, n = Object(), a = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/, r = /\bAppleWebKit\/(\d+)\b/, g = /\bEdge\/12\.(\d+)\b/, y = /\bEdge\/.(\d+)\b/, w = window.top !== window.self; t = "polyfill" in n ? n.polyfill : a.test(navigator.userAgent) || (navigator.userAgent.match(g) || [])[1] < 10547 || (navigator.userAgent.match(r) || [])[1] < 537 || y.test(navigator.userAgent) && w; var f = {}, T = window.requestAnimationFrame || setTimeout, l = document.getElementsByTagName("use"), c = 0; t && e(); } function _(e) { for (var t = e; t.nodeName.toLowerCase() !== "svg" && (t = t.parentNode);); return t; } (function (e, t, n, a) { a && N(); })(document, navigator, {}, /Trident\/[567]\b/.test(navigator.userAgent)); })();;
(() => {
    function Y(W, v = "", E = "") { var s, $, O; let { id: o = "", displayId: m = "", jobTitle: h = null, isBucketJobOrder: c = null, payRates: y = null, clientDetail: d = null, jobClassification: N = null, description: b = null, jobInformation: A = null, webDetails: p = null, education: x = null, workLocationAddress: L = null, postingDetail: S = null, workHours: j = [] } = W || {}, { salaryMax: k = "", salaryMin: g = "", currencyCode: w = "", unit: _ = "", unitDisplay: u = "" } = y || {}, { category: i = "", subcategory: n = "", industry: C = "", jobLevel: T = "" } = N || {}, { durationTemp: J = "", companyNameTemp: P = "", jobInternal: U = null, jobType: K = null } = A || {}, { administrativeArea: I = "", locality: q = "", derivedLocation: f = null, postalCode: l = "" } = L || {}, M = [...j || []].shift(), z = (d == null ? void 0 : d.name) || "", B = (b == null ? void 0 : b.description) || "", F = (p == null ? void 0 : p.postedUrl) || [], H = (x == null ? void 0 : x.degree) || "", X = ((s = f == null ? void 0 : f.latLng) == null ? void 0 : s.lat) || "", D = (($ = f == null ? void 0 : f.latLng) == null ? void 0 : $.lon) || "", e = (S == null ? void 0 : S.postingTime) || "", t = (S == null ? void 0 : S.expireTime) || "", r = (M == null ? void 0 : M.maxHours) || 0, a = F.length > 0 ? (O = F == null ? void 0 : F.find((R) => R.lang === v)) == null ? void 0 : O.href : ""; return { clientName: z, jobTitle: h, jobId: o, jobDescription: B, jobUrl: a, postingTime: e, jobLocationRegion: I, jobReferenceNumber: m, workTime: r, salaryMin: g, salaryMax: k, jobCurrency: w, compensation: _, compensationTypeId: u, jobType: K, jobEducation: H, duration: J, companyName: P, jobSector: i, jobSubSector: n, expireTime: t, jobLocationCity: q, jobLocationPostcode: l, latitude: X, longitude: D, jobIndustry: C, jobExperience: T, jobInternal: U === "true", isBucketJobOrder: c }; } function Z(W) { let { ClientInformation: v = null, JobIdentity: E = null, JobInformation: o = null, Salary: m = null, JobLocation: h = null, BlueXJobData: c = null, JobDates: y = null, Contact: d, JobUrl: N = "" } = W, { jobCurrencyId: b = "", Title: A = "", Hours: p = "", Education: x = "", Duration: L = "", Description: S = "", Industry: j = "", Experience: k = "", JobInternal: g = "", Skills: w = "" } = o || {}, { SalaryMin: _ = "", SalaryMax: u = "", CompensationType: i = "", CompensationTypeId: n = "", Rate: C = "", CurrencyId: T = "" } = m || {}, { Latitude: J = "", Longitude: P = "", Region: U = "", City: K = "", CityRegionAutocomplete: I = "", Postcode: q = "", Multilingual: f = null } = h || {}, { ReferenceNumber: l = "", JobType: M = "", Specialism: z = "", SubSpecialism: B = "", Region: F = "", JobId: H } = c || {}, X = (v == null ? void 0 : v.ClientName) || "", D = (E == null ? void 0 : E.CompanyName) || "", e = (E == null ? void 0 : E.DovaJobId) || "", t = (f == null ? void 0 : f.CityRegionAutocomplete) || "", r = (f == null ? void 0 : f.JobType) || "", a = (y == null ? void 0 : y.DateCreated) || "", s = (y == null ? void 0 : y.DateExpire) || "", $ = (d == null ? void 0 : d.Office) || ""; return { clientName: X, jobTitle: A, jobId: H, jobDescription: S, jobUrl: N, postingTime: a, jobLocation: I, salaryMin: _, salaryMax: u, jobCurrencyId: T, compensation: i, jobType: M, multilingualJobLocation: t, multilingualJobType: r, compensationTypeId: n, rate: C, workTime: p, jobEducation: x, duration: L, companyName: D, jobSector: z, jobSubSector: B, expireTime: s, jobLocationRegion: U, jobLocationCity: K, latitude: J, longitude: P, jobTypeId: b, jobIndustry: j, jobExperience: k, jobLocationPostcode: q, jobInternal: g === "true", jobReferenceNumber: l, contactOffice: $, jobSkills: w, dovaJobId: e, customField2: F }; } (function (W, v, E) {
        v.behaviors.dataLayerHelper = {
            attach: function (o, m) { v.behaviors.dataLayerHelper.attachFormDataPolyfill(); var h = v.behaviors.dataLayerHelper.getQueryParamValue("thank-you", !1); if (h === "open-application") { var c = sessionStorage.getItem("openApplication"); c && (sessionStorage.removeItem("openApplication"), c = JSON.parse(c), window.dataLayer.push({ event: "confirmation", ecommerce: { purchase: { jobs: [{ application_id: c.oaid, job_id: "open application", job_title: "Open Application", application_type: "open application", operating_company: "", region: c.region || "", category: c.specialism || "", branch_name: c.branch || "" }] } } }), window.dataLayer.push({ ecommerce: null }), window.dataLayer.push({ event: "purchase", ecommerce: { transaction_id: c.oaid, value: 1, currency: "EUR", items: [{ item_id: "open application", item_name: "Open Application", item_region: c.region || "", item_category: c.specialism || "", branch_name: c.branch || "" }] } })); } var y = document.querySelectorAll("[data-rs-modal-trigger]"), d; for (d = 0; d < y.length; ++d)y[d].addEventListener("click", b); var N = document.querySelectorAll("[data-rs-toggable-target]"); for (d = 0; d < N.length; ++d)N[d].addEventListener("click", function (u) { var i = this.getAttribute("data-rs-toggable-target"), n = window.location.pathname; n = n.replace(/\/*$/, ""), i === "#mobile-search-job" ? window.dataLayer.push({ event: "pageview", virtualPage: n + "/start-search/job" }) : i === "#mobile-search-location" ? window.dataLayer.push({ event: "pageview", virtualPage: n + "/start-search/location" }) : i === "#mobile-search-salary" && window.dataLayer.push({ event: "pageview", virtualPage: n + "/start-search/salary" }); }); function b(u) { window.dataLayer = window.dataLayer || []; var i = this.getAttribute("data-rs-modal-trigger"), n = window.location.pathname; n = n.replace(/\/*$/, ""), i === "advanced-search" || i === "advanced-search-header" ? this.classList.contains("hidden--from-l") ? window.dataLayer.push({ event: "pageview", virtualPage: n + "/start-search/job" }) : window.dataLayer.push({ event: "pageview", virtualPage: n + "/advanced-search" }) : i.indexOf("modal-") > -1 && this.hasAttribute("data-wow-category") ? window.dataLayer.push({ event: "pageview", virtualPage: n + "/world-of-work/" + this.getAttribute("data-wow-category") }) : i.indexOf("find-a-job-") > -1 && window.dataLayer.push({ event: "pageview", virtualPage: n + "/find-a-job-that-fits-me/industry-past-job" }); } var A = document.querySelectorAll("[data-cta-click-event-action]"); for (d = 0; d < A.length; ++d)A[d].addEventListener("mousedown", g); var p = document.querySelectorAll("[data-rs-video]"); for (d = 0; d < p.length; ++d)p[d].addEventListener("click", w); function x(u, i) { window.dataLayer = window.dataLayer || [], window.dataLayer.push({ eventCategory: "[JE] component click", eventAction: u, eventLabel: i, event: "eventTracker" }); } function L(u, i, n = "") { window.dataLayer.push({ event_params: null }), window.dataLayer.push({ event: "interaction", event_params: { event_name: "click", component_url: u, outbound: n, component: i } }); } var S = function (u) { return u.indexOf("//") === 0 && (u = location.protocol + u), u.toLowerCase().replace(/([a-z])?:\/\//, "$1").split("/")[0]; }, j = function (u) { return (u.indexOf(":") > -1 || u.indexOf("//") > -1) && S(location.href) !== S(u); }; let k = ["my", "sg"]; function g(u) { var i = this.getAttribute("href") || this.getAttribute("src") || "", n = this.getAttribute("data-cta-click-event-action") || ""; x(n, i), k.includes(E.opco) && L(i, "blog_cta", j(i)); } function w(u) { var i = this.getAttribute("data-rs-video"), n = ""; i && (n = _(i)), x("video CTA", n), k.includes(E.opco) && L(n, "video_cta"); } function _(u) { var i = document.querySelector("[data-rs-video-iframe=" + u + "]"); return i && i.getAttribute("src") || ""; } window.addEventListener("formSubmitSuccess", function (u) { var i = v.behaviors.dataLayerHelper.parseFormData(u.detail.formdata), n = !1, C = "", T = "", J = "eventTracker"; i && Object.keys(i).length > 0 && "webform_id" in i && (n = "form tracking", C = "form submitted", T = i.webform_id), n && window.dataLayer.push({ eventCategory: n, eventAction: C, eventLabel: T, event: J }); }); }, parseFormData: function (o) { for (var m = o.entries(), h = m.next(), c, y = []; !h.done;)c = h.value, y[c[0]] = c[1], h = m.next(); return y; }, parseJobInfo: function (o, m, h, c, y, d, N) { if (!m) return console.log("Missing job info when building datalayer."), !1; let { companyName: b = "", jobTitle: A = "", jobId: p = "", jobSector: x = "", jobIndustry: L = "", jobSubSector: S = "", jobExperience: j = "", jobEducation: k = "", jobUrl: g = "", postingTime: w = "", jobLocationCity: _ = "", jobLocationRegion: u = "", jobLocationPostcode: i = "", salaryMin: n = "", salaryMax: C = "", jobReferenceNumber: T = "", jobInternal: J, compensationTypeId: P = "", workTime: U = "", jobType: K = "", contactOffice: I = "", jobSkills: q = "", dovaJobId: f = "" } = o, l = {}; l.application_id = "", l.application_type = "", l.job_title = A, l.job_id = p, l.category = x, l.operating_company = b, l.position = h || 0, l.list_name = c || "", l.industry = L, l.subcategory = S, l.hours = U, l.minimum_salary = n && P ? v.behaviors.dataLayerHelper.formatNumber(v.behaviors.dataLayerHelper.getAnnualSalary(Number(n), P)) : 0, l.maximum_salary = C && P ? v.behaviors.dataLayerHelper.formatNumber(v.behaviors.dataLayerHelper.getAnnualSalary(Number(C), P)) : 0, l.employment_type = K || 0, l.work_experience = (j == null ? void 0 : j.replace(/<[^>]*>/g, "")) || "", l.education_level = k, l.internal = J, l.zip_code = i, l.city = _, l.region = u, l.business_unit = "", l.branch_region = "", l.branch_city = "", l.branch_zip_code = "", l.standardized_job_code = "", l.standardized_job_title = "", l.reference_number = T, l.branch_name = I, l.skills = (q == null ? void 0 : q.replace(/<[^>]*>/g, "")) || "", l.url = g || v.behaviors.dataLayerHelper.buildJobUrl(A, _, f), l.launch_date = w ? v.behaviors.dataLayerHelper.formatDateToISOString(new Date(w)) : ""; var M = { event: "jobClick", ecommerce: { click: { list: c || "", jobs: [l] } } }, z = { event: "select_item", ecommerce: { item_list_id: y || "", item_list_name: d || "", items: [v.behaviors.dataLayerHelper.buildGA4Info(o, h)] } }, B = ""; return B = " window.dataLayer = window.dataLayer || [];", N || (B += "var data = " + JSON.stringify(M) + ";window.dataLayer.push(data);"), B += "window.dataLayer.push({ ecommerce: null });var ga4data = " + JSON.stringify(z) + ";window.dataLayer.push(ga4data);", m.dataLayerJobClick = B, l; }, buildGA4Info: function (o, m) { var C; if (!o) return console.log("Missing job info when building datalayer."), !1; let { jobTitle: h = "", jobId: c = "", jobSector: y = "", jobIndustry: d = "", jobSubSector: N = "", jobExperience: b = "", jobEducation: A = "", postingTime: p = "", jobLocationCity: x = "", jobLocationRegion: L = "", jobLocationPostcode: S = "", salaryMin: j = "", salaryMax: k = "", jobReferenceNumber: g = "", compensationTypeId: w = "", workTime: _ = "", jobType: u = "", contactOffice: i = "" } = o; var n = {}; return n.item_id = c, n.job_title = h, n.item_name = h, n.item_category = y, n.item_category2 = N, n.item_opco = (C = window.drupalSettings.opco) != null ? C : "", n.item_industry = d, n.item_hours = _, n.item_minimum_salary = j && w ? v.behaviors.dataLayerHelper.formatNumber(v.behaviors.dataLayerHelper.getAnnualSalary(Number(j), w)) : 0, n.item_maximum_salary = k && w ? v.behaviors.dataLayerHelper.formatNumber(v.behaviors.dataLayerHelper.getAnnualSalary(Number(k), w)) : 0, n.item_employment_type = u || "", n.item_education_level = A, n.item_work_experience = (b == null ? void 0 : b.replace(/<[^>]*>/g, "")) || "", n.item_zip_code = S, n.item_city = x, n.item_region = L, n.item_business_unit = "", n.branch_name = i, n.branch_zip_code = "", n.branch_city = "", n.branch_region = "", n.item_launch_date = p ? v.behaviors.dataLayerHelper.formatDateToISOString(new Date(p)) : "", n.item_reference_number = g, n.price = 1, n.quantity = 1, n.index = m, n; }, buildJobUrl: function (o, m, h) { var c = "/jobs"; return E && E.advanced_search_settings && E.advanced_search_settings.jobSearchUrl && (c = E.advanced_search_settings.jobSearchUrl), o = o.replace(/(& |,|\/)/g, "").replace(/ /g, "-").toLowerCase(), m = m.replace(/(& |,|\/)/g, "").replace(/ /g, "-").toLowerCase(), c + "/" + o + "_" + m + "_" + h + "/"; }, getQueryParamValue: function (o, m) { return decodeURIComponent(m ? m.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent(o).replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1") : window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent(o).replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1")); }, attachFormDataPolyfill: function () {
                (function () {
                    var o; function m(e) { var t = 0; return function () { return t < e.length ? { done: !1, value: e[t++] } : { done: !0 }; }; } var h = typeof Object.defineProperties == "function" ? Object.defineProperty : function (e, t, r) { e != Array.prototype && e != Object.prototype && (e[t] = r.value); }, c = typeof window != "undefined" && window === this ? this : typeof global != "undefined" && global != null ? global : this; function y() { y = function () { }, c.Symbol || (c.Symbol = N); } function d(e, t) { this.s = e, h(this, "description", { configurable: !0, writable: !0, value: t }); } d.prototype.toString = function () { return this.s; }; var N = function () { function e(r) { if (this instanceof e) throw new TypeError("Symbol is not a constructor"); return new d("jscomp_symbol_" + (r || "") + "_" + t++, r); } var t = 0; return e; }(); function b() { y(); var e = c.Symbol.iterator; e || (e = c.Symbol.iterator = c.Symbol("Symbol.iterator")), typeof Array.prototype[e] != "function" && h(Array.prototype, e, { configurable: !0, writable: !0, value: function () { return A(m(this)); } }), b = function () { }; } function A(e) { return b(), e = { next: e }, e[c.Symbol.iterator] = function () { return this; }, e; } function p(e) { var t = typeof Symbol != "undefined" && Symbol.iterator && e[Symbol.iterator]; return t ? t.call(e) : { next: m(e) }; } var x; if (typeof Object.setPrototypeOf == "function") x = Object.setPrototypeOf; else { var L; e: { var S = { v: !0 }, j = {}; try { j.__proto__ = S, L = j.v; break e; } catch (e) { } L = !1; }; x = L ? function (e, t) { if (e.__proto__ = t, e.__proto__ !== t) throw new TypeError(e + " is not extensible"); return e; } : null; } var k = x; function g() { this.h = !1, this.c = null, this.o = void 0, this.b = 1, this.m = this.w = 0, this.g = null; } function w(e) { if (e.h) throw new TypeError("Generator is already running"); e.h = !0; } g.prototype.i = function (e) { this.o = e; }, g.prototype.j = function (e) { this.g = { A: e, B: !0 }, this.b = this.w || this.m; }, g.prototype.return = function (e) { this.g = { return: e }, this.b = this.m; }; function _(e, t, r) { return e.b = r, { value: t }; } function u(e) { this.C = e, this.l = []; for (var t in e) this.l.push(t); this.l.reverse(); } function i(e) { this.a = new g(), this.D = e; } i.prototype.i = function (e) { return w(this.a), this.a.c ? C(this, this.a.c.next, e, this.a.i) : (this.a.i(e), T(this)); }; function n(e, t) { w(e.a); var r = e.a.c; return r ? C(e, "return" in r ? r.return : function (a) { return { value: a, done: !0 }; }, t, e.a.return) : (e.a.return(t), T(e)); } i.prototype.j = function (e) { return w(this.a), this.a.c ? C(this, this.a.c.throw, e, this.a.i) : (this.a.j(e), T(this)); }; function C(e, t, r, a) { try { var s = t.call(e.a.c, r); if (!(s instanceof Object)) throw new TypeError("Iterator result " + s + " is not an object"); if (!s.done) return e.a.h = !1, s; var $ = s.value; } catch (O) { return e.a.c = null, e.a.j(O), T(e); } return e.a.c = null, a.call(e.a, $), T(e); } function T(e) { for (; e.a.b;)try { var t = e.D(e.a); if (t) return e.a.h = !1, { value: t.value, done: !1 }; } catch (r) { e.a.o = void 0, e.a.j(r); } if (e.a.h = !1, e.a.g) { if (t = e.a.g, e.a.g = null, t.B) throw t.A; return { value: t.return, done: !0 }; } return { value: void 0, done: !0 }; } function J(e) { this.next = function (t) { return e.i(t); }, this.throw = function (t) { return e.j(t); }, this.return = function (t) { return n(e, t); }, b(), this[Symbol.iterator] = function () { return this; }; } function P(e, t) { var r = new J(new i(t)); return k && k(r, e.prototype), r; } if (typeof Blob != "undefined" && (typeof FormData == "undefined" || !FormData.prototype.keys)) {
                        var U = function (e, t) { for (var r = 0; r < e.length; r++)t(e[r]); }, K = function (e, t, r) { return t instanceof Blob ? [String(e), t, r !== void 0 ? r + "" : typeof t.name == "string" ? t.name : "blob"] : [String(e), String(t)]; }, I = function (e, t) { if (e.length < t) throw new TypeError(t + " argument required, but only " + e.length + " present."); }, q = function (e) { var t = p(e); return e = t.next().value, t = t.next().value, e instanceof Blob && (e = new File([e], t, { type: e.type, lastModified: e.lastModified })), e; }, f = typeof window == "object" ? window : typeof self == "object" ? self : this, l = f.FormData, M = f.XMLHttpRequest && f.XMLHttpRequest.prototype.send, z = f.Request && f.fetch, B = f.navigator && f.navigator.sendBeacon; y(); var F = f.Symbol && Symbol.toStringTag; F && (Blob.prototype[F] || (Blob.prototype[F] = "Blob"), "File" in f && !File.prototype[F] && (File.prototype[F] = "File")); try { new File([], ""); } catch (e) { f.File = function (t, r, a) { return t = new Blob(t, a), a = a && a.lastModified !== void 0 ? new Date(a.lastModified) : new Date(), Object.defineProperties(t, { name: { value: r }, lastModifiedDate: { value: a }, lastModified: { value: +a }, toString: { value: function () { return "[object File]"; } } }), F && Object.defineProperty(t, F, { value: "File" }), t; }; } y(), b(); var H = function (e) {
                            if (this.f = Object.create(null), !e) return this; var t = this; U(e.elements, function (r) {
                                if (r.name && !r.disabled && r.type !== "submit" && r.type !== "button") if (r.type === "file") { var a = r.files && r.files.length ? r.files : [new File([], "", { type: "application/octet-stream" })]; U(a, function (s) { t.append(r.name, s); }); } else r.type === "select-multiple" || r.type === "select-one" ? U(r.options, function (s) { !s.disabled && s.selected && t.append(r.name, s.value); }) : r.type === "checkbox" || r.type === "radio" ? r.checked && t.append(r.name, r.value) : (a = r.type === "textarea" ? r.value.replace(/\r\n/g, `
`).replace(/\n/g, `\r
`) : r.value, t.append(r.name, a));
                            });
                        }; if (o = H.prototype, o.append = function (e, t, r) { I(arguments, 2); var a = p(K.apply(null, arguments)); e = a.next().value, t = a.next().value, r = a.next().value, a = this.f, a[e] || (a[e] = []), a[e].push([t, r]); }, o.delete = function (e) { I(arguments, 1), delete this.f[String(e)]; }, o.entries = function e() { var t = this, r, a, s, $, O, R; return P(e, function (V) { switch (V.b) { case 1: r = t.f, s = new u(r); case 2: var G; e: { for (G = s; 0 < G.l.length;) { var Q = G.l.pop(); if (Q in G.C) { G = Q; break e; } } G = null; }; if ((a = G) == null) { V.b = 0; break; } $ = p(r[a]), O = $.next(); case 5: if (O.done) { V.b = 2; break; } return R = O.value, _(V, [a, q(R)], 6); case 6: O = $.next(), V.b = 5; } }); }, o.forEach = function (e, t) { I(arguments, 1); for (var r = p(this), a = r.next(); !a.done; a = r.next()) { var s = p(a.value); a = s.next().value, s = s.next().value, e.call(t, s, a, this); } }, o.get = function (e) { I(arguments, 1); var t = this.f; return e = String(e), t[e] ? q(t[e][0]) : null; }, o.getAll = function (e) { return I(arguments, 1), (this.f[String(e)] || []).map(q); }, o.has = function (e) { return I(arguments, 1), String(e) in this.f; }, o.keys = function e() { var t = this, r, a, s, $, O; return P(e, function (R) { if (R.b == 1 && (r = p(t), a = r.next()), R.b != 3) { if (a.done) { R.b = 0; return; } return s = a.value, $ = p(s), O = $.next().value, _(R, O, 3); } a = r.next(), R.b = 2; }); }, o.set = function (e, t, r) { I(arguments, 2); var a = K.apply(null, arguments); this.f[a[0]] = [[a[1], a[2]]]; }, o.values = function e() { var t = this, r, a, s, $, O; return P(e, function (R) { if (R.b == 1 && (r = p(t), a = r.next()), R.b != 3) { if (a.done) { R.b = 0; return; } return s = a.value, $ = p(s), $.next(), O = $.next().value, _(R, O, 3); } a = r.next(), R.b = 2; }); }, H.prototype._asNative = function () { for (var e = new l(), t = p(this), r = t.next(); !r.done; r = t.next()) { var a = p(r.value); r = a.next().value, a = a.next().value, e.append(r, a); } return e; }, H.prototype._blob = function () {
                            for (var e = "----formdata-polyfill-" + Math.random(), t = [], r = p(this), a = r.next(); !a.done; a = r.next()) {
                                var s = p(a.value); a = s.next().value, s = s.next().value, t.push("--" + e + `\r
`), s instanceof Blob ? t.push('Content-Disposition: form-data; name="' + a + '"; filename="' + s.name + `"\r
`, "Content-Type: " + (s.type || "application/octet-stream") + `\r
\r
`, s, `\r
`) : t.push('Content-Disposition: form-data; name="' + a + `"\r
\r
`+ s + `\r
`);
                            } return t.push("--" + e + "--"), new Blob(t, { type: "multipart/form-data; boundary=" + e });
                        }, H.prototype[Symbol.iterator] = function () { return this.entries(); }, H.prototype.toString = function () { return "[object FormData]"; }, F && (H.prototype[F] = "FormData"), M) { var X = f.XMLHttpRequest.prototype.setRequestHeader; f.XMLHttpRequest.prototype.setRequestHeader = function (e, t) { X.call(this, e, t), e.toLowerCase() === "content-type" && (this.u = !0); }, f.XMLHttpRequest.prototype.send = function (e) { e instanceof H ? (e = e._blob(), this.u || this.setRequestHeader("Content-Type", e.type), M.call(this, e)) : M.call(this, e); }; } if (z) { var D = f.fetch; f.fetch = function (e, t) { return t && t.body && t.body instanceof H && (t.body = t.body._blob()), D.call(this, e, t); }; } B && (f.navigator.sendBeacon = function (e, t) { return t instanceof H && (t = t._asNative()), B.call(this, e, t); }), f.FormData = H;
                    }
                })();
            }, getAnnualSalary: function (o, m) { switch (m) { case "1": return o * 8 * 5 * 52; case "2": return o * 5 * 52; case "3": return o * 52; case "4": return o * 13; default: return o; } }, formatNumber: function (o) { return o = parseFloat(o), parseFloat(o.toFixed(2)); }, addEcommerce: function (o, m, h, c = "", y = !1, d = "", N = "") { var b = {}; if (o && o.length) { var A = [], p = []; for (var x in o) { var L = o[x], S = L.type, j = L.type_ga4, k = L.name_ga4, g = L.data; if (g && g.length) { for (var w in g) { var _ = !1, u = !1; "_source" in g[w] ? _ = g[w]._source : _ = g[w], u = y ? Y(_, d, N) : Z(_); var i = 1 + Number(m) + Number(w), n = v.behaviors.dataLayerHelper.parseJobInfo(u, _, i, S, j, k, y), C = v.behaviors.dataLayerHelper.buildGA4Info(u, i); A.push(n), p.push(C); } b.impressions = A; } } } if (window.dataLayerGA4Helper = window.dataLayerGA4Helper || [], window.dataLayerGA4Helper.push({ block_id: "#" + c, event: "view_item_list", ecommerce: { item_list_id: j, item_list_name: k, items: p.slice(3, 14) } }), window.dataLayer = window.dataLayer || [], window.dataLayer.push({ ecommerce: null }), window.dataLayer.push({ event: "view_item_list", ecommerce: { item_list_id: j, item_list_name: k, items: p.slice(0, 3) } }), !y) if (h) window.dataLayer.push({ event: "jobImpressions", ecommerce: { impressions: b.impressions } }); else { if (window.dataLayer !== void 0 && b.impressions && window.dataLayer[0] !== void 0) if (window.dataLayer[0].ecommerce !== void 0) if (window.dataLayer[0].ecommerce.impressions !== void 0) for (var T in b.impressions) window.dataLayer[0].ecommerce.impressions.push(b.impressions[T]); else Object.assign(window.dataLayer[0].ecommerce.impressions, b.impressions); else window.dataLayer[0].ecommerce = {}, Object.assign(window.dataLayer[0].ecommerce, b); } }, formatDateToISOString: function (o) { if (isNaN(o.getMonth())) return !1; function m(h) { return h < 10 ? "0" + h : h; } return o.getUTCFullYear() + "-" + m(o.getUTCMonth() + 1) + "-" + m(o.getUTCDate()); }
        };
    })(jQuery, Drupal, drupalSettings);
})();;
(() => { var f = Object.create; var s = Object.defineProperty; var y = Object.getOwnPropertyDescriptor; var h = Object.getOwnPropertyNames; var p = Object.getPrototypeOf, E = Object.prototype.hasOwnProperty; var g = (r) => s(r, "__esModule", { value: !0 }); var b = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports); var m = (r, e, t) => { if (e && typeof e == "object" || typeof e == "function") { for (let n of h(e)) !E.call(r, n) && n !== "default" && s(r, n, { get: () => e[n], enumerable: !(t = y(e, n)) || t.enumerable }); } return r; }, v = (r) => m(g(s(r != null ? f(p(r)) : {}, "default", r && r.__esModule && "default" in r ? { get: () => r.default, enumerable: !0 } : { value: r, enumerable: !0 })), r); var a = b((w, l) => { var o = class { static triggerEvent(e, t) { let n; typeof Event == "function" ? n = new Event(t) : (n = document.createEvent("Event"), n.initEvent(t, !0, !0)), e.dispatchEvent(n); } static getElementByAttribute(e, t) { return t ? document.querySelector(`[${e}="${t}"]`) : document.querySelector(`[${e}]`); } static getElementsByAttribute(e, t) { return t ? document.querySelectorAll(`[${e}="${t}"]`) : document.querySelectorAll(`[${e}]`); } static getElementByAttributeWithinElement(e, t, n) { return n ? e.querySelector(`[${t}="${n}"]`) : e.querySelector(`[${t}]`); } static isMouseOver(e) { return Array.prototype.slice.call(e.parentElement.querySelectorAll(":hover")).filter(function () { return e[0] == this; }).length > 0; } static getElementsByAttributeWithinElement(e, t, n) { return n ? e.querySelectorAll(`[${t}="${n}"]`) : e.querySelectorAll(`[${t}]`); } static getElementByClassWithinElement(e, t) { return e.querySelector(`.${t}`); } static maxWidthMobileViewports() { return 940; } static createEvent(e) { let t; return typeof Event == "function" ? t = new Event(e) : (t = document.createEvent("Event"), t.initEvent(e, !0, !0)), t; } static isDesktop() { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } static isIE11() { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } static getKeyCodeOnKeyDownEvent(e) { let t; if (e != null) if (typeof e.code == "undefined") switch (e.keyCode) { case 13: t = "Enter"; break; case 38: t = "ArrowUp"; break; case 40: t = "ArrowDown"; break; case 8: t = "Backspace"; break; case 9: t = "Tab"; break; case 27: t = "Escape"; break; case 33: t = "PageUp"; break; case 34: t = "PageDown"; break; case 32: t = "Space"; break; default: t = void 0; break; } else t = e.code; return t; } static getKeyboardFocusableElements(e) { let t = (n) => window.getComputedStyle(n).visibility === "hidden"; return [...e.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])')].filter((n) => !t(n) && !n.hasAttribute("disabled") && !n.getAttribute("aria-hidden")); } }; l.exports = o; }); var c = v(a()); (function (r) { var e = !1; r("body").on("touchmove", function () { e = !0; }), r("body").on("touchstart", function () { e = !1; }), r('a[href^="#"]:not([data-rs-popover-trigger])').on("click touchend", function (t) { if (!r(this).closest("*[data-rs-scroll-link]").length) { var n = r(this).attr("href").toLowerCase(), i = r(this).attr("data-disable-scroll"), d = r(this).attr("data-scroll-offset") || 0, u = r(this).attr("data-scroll-close-on-click") !== void 0; e || (u && r(this).closest("[data-rs-collapsible-content]").parent().find("[data-rs-collapsible]").trigger("click"), !(typeof i != "undefined" && i !== !1) && n !== "#" && r(n).length > 0 && (t.preventDefault(), r("html, body").animate({ scrollTop: r(n).offset().top - parseInt(d) }, 1e3))); } }), window.elementHelpers = c.default; })(jQuery); })();;
(function ($, Drupal, drupalSettings) { Drupal.behaviors.dataLayerHelper = { attach: function (context, settings) { Drupal.behaviors.dataLayerHelper.attachFormDataPolyfill(); var thankYouPageType = Drupal.behaviors.dataLayerHelper.getQueryParamValue('thank-you', false); if (thankYouPageType === 'open-application') { var openApplicationData = sessionStorage.getItem('openApplication'); if (openApplicationData) { sessionStorage.removeItem('openApplication'); openApplicationData = JSON.parse(openApplicationData); window.dataLayer.push({ 'event': 'confirmation', 'ecommerce': { 'purchase': { 'jobs': [{ 'application_id': openApplicationData.oaid, 'job_id': 'open application', 'job_title': 'Open Application', 'application_type': 'open application', 'operating_company': '', 'region': openApplicationData.region || '', 'category': openApplicationData.specialism || '', 'branch_name': openApplicationData.branch || '' }] } } }); window.dataLayer.push({ ecommerce: null }); window.dataLayer.push({ event: "purchase", ecommerce: { transaction_id: openApplicationData.oaid, value: 1, currency: 'USD', items: [{ 'item_id': 'open application', 'item_name': 'Open Application', 'item_region': openApplicationData.region || '', 'item_category': openApplicationData.specialism || '', 'branch_name': openApplicationData.branch || '' }] } }); } } var modalTriggers = document.querySelectorAll('[data-rs-modal-trigger]'), i; for (i = 0; i < modalTriggers.length; ++i)modalTriggers[i].addEventListener('click', modalTriggerClickListener); var advancedSearchMobileTabs = document.querySelectorAll('[data-rs-toggable-target]'); for (i = 0; i < advancedSearchMobileTabs.length; ++i)advancedSearchMobileTabs[i].addEventListener('click', function (e) { var toggleTarget = this.getAttribute('data-rs-toggable-target'); var path = window.location.pathname; path = path.replace(/\/*$/, ''); if (toggleTarget === '#mobile-search-job') window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/start-search/job' }); else if (toggleTarget === '#mobile-search-location') window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/start-search/location' }); else { if (toggleTarget === '#mobile-search-salary') window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/start-search/salary' }); } }); function modalTriggerClickListener(e) { window.dataLayer = window.dataLayer || []; var modalType = this.getAttribute('data-rs-modal-trigger'); var path = window.location.pathname; path = path.replace(/\/*$/, ''); if (modalType === 'advanced-search' || modalType === 'advanced-search-header') if (this.classList.contains('hidden--from-l')) window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/start-search/job' }); else window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/advanced-search' }); else if ((modalType.indexOf('modal-') > -1) && this.hasAttribute('data-wow-category')) window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/world-of-work/' + this.getAttribute('data-wow-category') }); else { if ((modalType.indexOf('find-a-job-') > -1)) window.dataLayer.push({ 'event': 'pageview', 'virtualPage': path + '/find-a-job-that-fits-me/industry-past-job' }); } } window.addEventListener('formSubmitSuccess', function (e) { var formData = Drupal.behaviors.dataLayerHelper.parseFormData(e.detail.formdata), category = false, action = '', label = '', eventType = 'eventTracker'; if (formData && Object.keys(formData).length > 0) if ('webform_id' in formData) { category = "form tracking"; action = "form submitted"; label = formData.webform_id; } const dataLayerObject = { 'eventCategory': category, 'eventAction': action, 'eventLabel': label, 'event': eventType }; if (e.detail && e.detail.fullResponse && e.detail.fullResponse.hubspotContactId) dataLayerObject['hs_contact_id'] = e.detail.fullResponse.hubspotContactId; if (category) window.dataLayer.push(dataLayerObject); }); }, parseFormData: function (formData) { var formDataEntries = formData.entries(), formDataEntry = formDataEntries.next(), pair, form = []; while (!formDataEntry.done) { pair = formDataEntry.value; form[pair[0]] = pair[1]; formDataEntry = formDataEntries.next(); } return form; }, parseJobInfo: function (job, position, listName, type_ga4, name_ga4) { if (!job) { console.log('Missing job info when building datalayer.'); return false; } var info = {}; info.application_id = false; info.application_type = 'direct application'; info.job_title = job.title || ''; info.job_id = job.id; info.category = job.categories?.join(', '); info.operating_company = job.lobName ?? ''; info.position = position || 0; info.list_name = listName || ''; info.industry = job.industries?.join(', ') ?? ''; info.hours = job.workHours?.join(', ') ?? null; info.minimum_salary = (job.salary && job.salary.min && job.salary.type) ? Drupal.behaviors.dataLayerHelper.formatNumber(Drupal.behaviors.dataLayerHelper.getAnnualSalary(Number(job.salary.min), job.salary.type)) : 0; info.maximum_salary = (job.salary && job.salary.max && job.salary.type) ? Drupal.behaviors.dataLayerHelper.formatNumber(Drupal.behaviors.dataLayerHelper.getAnnualSalary(Number(job.salary.max), job.salary.type)) : 0; info.employment_type = Drupal.behaviors.dataLayerHelper.getEmploymentType(job.type, job.employmentType); info.work_experience = job.experienceRequirements?.join(', ') ?? ''; info.education_level = job.educationRequirements?.join(', ') ?? ''; info.internal = job.isInternal ? (job.isInternal === 'true') : false; info.zip_code = job.jobLocation?.postalCode ?? ''; info.city = job.jobLocation?.city ?? ''; info.region = job.jobLocation?.state ?? ''; info.business_unit = job.officeLocation?.businessUnit ?? ''; info.branch_region = job.officeLocation?.state ?? ''; info.branch_city = job.officeLocation?.city ?? ''; info.branch_zip_code = job.officeLocation?.postalCode ?? ''; info.standardized_job_code = job.sicCode?.join(', ') ?? ''; info.standardized_job_title = ''; info.reference_number = job.atsReference; info.branch_name = job.officeLocation?.address1 ? job.officeLocation.address1 : job.lobName; info.skills = job.skills?.join(', '); info.url = `${window.location.origin}${Drupal.behaviors.dataLayerHelper.buildJobUrl(job.title, job.jobLocation, job.atsReference, job.lobId)}`; info.launch_date = job.createdDate ? Drupal.behaviors.dataLayerHelper.formatDateToISOString(new Date(job.createdDate)) : ''; var clickEvent = { 'event': 'jobClick', 'ecommerce': { 'click': { 'list': listName || "", 'jobs': [info] } } }; var clickGA4Event = { "event": "select_item", "ecommerce": { "item_list_id": type_ga4 || "", "item_list_name": name_ga4 || "", "items": [Drupal.behaviors.dataLayerHelper.buildGA4Info(job, position)] } }; job.dataLayerJobClick = " window.dataLayer = window.dataLayer || [];" + "var data = " + JSON.stringify(clickEvent) + ";" + "window.dataLayer.push(data);" + "window.dataLayer.push({ ecommerce: null });" + "var ga4data = " + JSON.stringify(clickGA4Event) + ";" + "window.dataLayer.push(ga4data);"; return info; }, buildGA4Info: function (job, position) { if (!job) { console.log('Missing job info when building datalayer.'); return false; } var GA4info = {}; GA4info.item_id = job.id; GA4info.job_title = job.title || ''; GA4info.item_category = job?.categories && job.categories.hasOwnProperty(0) ? job.categories[0] : ''; GA4info.item_category2 = job?.categories && job.categories.hasOwnProperty(1) ? job.categories[1] : ''; GA4info.item_opco = window.drupalSettings.opco ?? ''; GA4info.item_industry = job.industries?.join(', ') ?? ''; GA4info.item_hours = job.workHours?.join(', ') ?? null; GA4info.item_minimum_salary = (job.salary && job.salary.min && job.salary.type) ? Drupal.behaviors.dataLayerHelper.formatNumber(Drupal.behaviors.dataLayerHelper.getAnnualSalary(Number(job.salary.min), job.salary.type)) : 0; GA4info.item_maximum_salary = (job.salary && job.salary.max && job.salary.type) ? Drupal.behaviors.dataLayerHelper.formatNumber(Drupal.behaviors.dataLayerHelper.getAnnualSalary(Number(job.salary.max), job.salary.type)) : 0; GA4info.item_employment_type = Drupal.behaviors.dataLayerHelper.getEmploymentType(job.type, job.employmentType); GA4info.item_education_level = job.educationRequirements?.join(', ') ?? ''; GA4info.item_work_experience = job.experienceRequirements?.join(', ') ?? ''; GA4info.item_zip_code = job.jobLocation?.postalCode ?? ''; GA4info.item_city = job.jobLocation?.city ?? ''; GA4info.item_region = job.jobLocation?.state ?? ''; GA4info.item_business_unit = job.officeLocation?.businessUnit ?? ''; GA4info.branch_name = job.officeLocation?.address1 ? job.officeLocation.address1 : job.lobName; GA4info.branch_zip_code = job.officeLocation?.postalCode ?? ''; GA4info.branch_city = job.officeLocation?.city ?? ''; GA4info.branch_region = job.officeLocation?.state ?? ''; GA4info.item_launch_date = job.createdDate ? Drupal.behaviors.dataLayerHelper.formatDateToISOString(new Date(job.createdDate)) : ''; GA4info.item_reference_number = job.atsReference; GA4info.price = 1; GA4info.quantity = 1; GA4info.index = position; return GA4info; }, buildJobUrl: function (title, jobLocation, atsReference, lobId) { let jobSearchBase = '/jobs'; if (drupalSettings && drupalSettings.advanced_search_settings && drupalSettings.advanced_search_settings.jobSearchUrl) jobSearchBase = drupalSettings.advanced_search_settings.jobSearchUrl; let city = jobLocation && jobLocation.city ? '_' + jobLocation.city.toLowerCase().replace(/ /g, "-") : ''; title = title.toLowerCase().replace(/[^a-zA-Z\d:]+/g, "-"); title = title.slice(-1) === '-' ? title.slice(0, -1) : title; const encodedUri = encodeURIComponent(`${title}${city}`); return `${jobSearchBase}/${lobId}/${atsReference}/${encodedUri}`; }, getQueryParamValue: function (key, url) { if (url) return decodeURIComponent(url.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent(key).replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1")); return decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent(key).replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1")); }, attachFormDataPolyfill: function () { ; (function () { var k; function m(a) { var b = 0; return function () { return b < a.length ? { done: !1, value: a[b++] } : { done: !0 }; }; } var p = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) { a != Array.prototype && a != Object.prototype && (a[b] = c.value); }, q = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this; function r() { r = function () { }; q.Symbol || (q.Symbol = u); } function v(a, b) { this.s = a; p(this, "description", { configurable: !0, writable: !0, value: b }); } v.prototype.toString = function () { return this.s; }; var u = function () { function a(c) { if (this instanceof a) throw new TypeError("Symbol is not a constructor"); return new v("jscomp_symbol_" + (c || "") + "_" + b++, c); } var b = 0; return a; }(); function w() { r(); var a = q.Symbol.iterator; a || (a = q.Symbol.iterator = q.Symbol("Symbol.iterator")); "function" != typeof Array.prototype[a] && p(Array.prototype, a, { configurable: !0, writable: !0, value: function () { return x(m(this)); } }); w = function () { }; } function x(a) { w(); a = { next: a }; a[q.Symbol.iterator] = function () { return this; }; return a; } function y(a) { var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator]; return b ? b.call(a) : { next: m(a) }; } var z; if ("function" == typeof Object.setPrototypeOf) z = Object.setPrototypeOf; else { var A; a: { var B = { v: !0 }, C = {}; try { C.__proto__ = B; A = C.v; break a; } catch (a) { } A = !1; }; z = A ? function (a, b) { a.__proto__ = b; if (a.__proto__ !== b) throw new TypeError(a + " is not extensible"); return a; } : null; } var D = z; function E() { this.h = !1; this.c = null; this.o = void 0; this.b = 1; this.m = this.w = 0; this.g = null; } function F(a) { if (a.h) throw new TypeError("Generator is already running"); a.h = !0; } E.prototype.i = function (a) { this.o = a; }; E.prototype.j = function (a) { this.g = { A: a, B: !0 }; this.b = this.w || this.m; }; E.prototype["return"] = function (a) { this.g = { "return": a }; this.b = this.m; }; function G(a, b, c) { a.b = c; return { value: b }; } function H(a) { this.C = a; this.l = []; for (var b in a) this.l.push(b); this.l.reverse(); } function I(a) { this.a = new E(); this.D = a; } I.prototype.i = function (a) { F(this.a); if (this.a.c) return J(this, this.a.c.next, a, this.a.i); this.a.i(a); return K(this); }; function L(a, b) { F(a.a); var c = a.a.c; if (c) return J(a, "return" in c ? c["return"] : function (d) { return { value: d, done: !0 }; }, b, a.a["return"]); a.a["return"](b); return K(a); } I.prototype.j = function (a) { F(this.a); if (this.a.c) return J(this, this.a.c["throw"], a, this.a.i); this.a.j(a); return K(this); }; function J(a, b, c, d) { try { var e = b.call(a.a.c, c); if (!(e instanceof Object)) throw new TypeError("Iterator result " + e + " is not an object"); if (!e.done) return a.a.h = !1, e; var f = e.value; } catch (g) { return a.a.c = null, a.a.j(g), K(a); } a.a.c = null; d.call(a.a, f); return K(a); } function K(a) { for (; a.a.b;)try { var b = a.D(a.a); if (b) return a.a.h = !1, { value: b.value, done: !1 }; } catch (c) { a.a.o = void 0, a.a.j(c); } a.a.h = !1; if (a.a.g) { b = a.a.g; a.a.g = null; if (b.B) throw b.A; return { value: b["return"], done: !0 }; } return { value: void 0, done: !0 }; } function M(a) { this.next = function (b) { return a.i(b); }; this["throw"] = function (b) { return a.j(b); }; this["return"] = function (b) { return L(a, b); }; w(); this[Symbol.iterator] = function () { return this; }; } function N(a, b) { var c = new M(new I(b)); D && D(c, a.prototype); return c; } if ("undefined" !== typeof Blob && ("undefined" === typeof FormData || !FormData.prototype.keys)) { var O = function (a, b) { for (var c = 0; c < a.length; c++)b(a[c]); }, P = function (a, b, c) { return b instanceof Blob ? [String(a), b, void 0 !== c ? c + "" : "string" === typeof b.name ? b.name : "blob"] : [String(a), String(b)]; }, Q = function (a, b) { if (a.length < b) throw new TypeError(b + " argument required, but only " + a.length + " present."); }, S = function (a) { var b = y(a); a = b.next().value; b = b.next().value; a instanceof Blob && (a = new File([a], b, { type: a.type, lastModified: a.lastModified })); return a; }, T = "object" === typeof window ? window : "object" === typeof self ? self : this, U = T.FormData, V = T.XMLHttpRequest && T.XMLHttpRequest.prototype.send, W = T.Request && T.fetch, X = T.navigator && T.navigator.sendBeacon; r(); var Y = T.Symbol && Symbol.toStringTag; Y && (Blob.prototype[Y] || (Blob.prototype[Y] = "Blob"), "File" in T && !File.prototype[Y] && (File.prototype[Y] = "File")); try { new File([], ""); } catch (a) { T.File = function (b, c, d) { b = new Blob(b, d); d = d && void 0 !== d.lastModified ? new Date(d.lastModified) : new Date(); Object.defineProperties(b, { name: { value: c }, lastModifiedDate: { value: d }, lastModified: { value: +d }, toString: { value: function () { return "[object File]"; } } }); Y && Object.defineProperty(b, Y, { value: "File" }); return b; }; } r(); w(); var Z = function (a) { this.f = Object.create(null); if (!a) return this; var b = this; O(a.elements, function (c) { if (c.name && !c.disabled && "submit" !== c.type && "button" !== c.type) if ("file" === c.type) { var d = c.files && c.files.length ? c.files : [new File([], "", { type: "application/octet-stream" })]; O(d, function (e) { b.append(c.name, e); }); } else "select-multiple" === c.type || "select-one" === c.type ? O(c.options, function (e) { !e.disabled && e.selected && b.append(c.name, e.value); }) : "checkbox" === c.type || "radio" === c.type ? c.checked && b.append(c.name, c.value) : (d = "textarea" === c.type ? c.value.replace(/\r\n/g, "\n").replace(/\n/g, "\r\n") : c.value, b.append(c.name, d)); }); }; k = Z.prototype; k.append = function (a, b, c) { Q(arguments, 2); var d = y(P.apply(null, arguments)); a = d.next().value; b = d.next().value; c = d.next().value; d = this.f; d[a] || (d[a] = []); d[a].push([b, c]); }; k["delete"] = function (a) { Q(arguments, 1); delete this.f[String(a)]; }; k.entries = function b() { var c = this, d, e, f, g, h, t; return N(b, function (l) { switch (l.b) { case 1: d = c.f, f = new H(d); case 2: var n; a: { for (n = f; 0 < n.l.length;) { var R = n.l.pop(); if (R in n.C) { n = R; break a; } } n = null; }; if (null == (e = n)) { l.b = 0; break; } g = y(d[e]); h = g.next(); case 5: if (h.done) { l.b = 2; break; } t = h.value; return G(l, [e, S(t)], 6); case 6: h = g.next(), l.b = 5; } }); }; k.forEach = function (b, c) { Q(arguments, 1); for (var d = y(this), e = d.next(); !e.done; e = d.next()) { var f = y(e.value); e = f.next().value; f = f.next().value; b.call(c, f, e, this); } }; k.get = function (b) { Q(arguments, 1); var c = this.f; b = String(b); return c[b] ? S(c[b][0]) : null; }; k.getAll = function (b) { Q(arguments, 1); return (this.f[String(b)] || []).map(S); }; k.has = function (b) { Q(arguments, 1); return String(b) in this.f; }; k.keys = function c() { var d = this, e, f, g, h, t; return N(c, function (l) { 1 == l.b && (e = y(d), f = e.next()); if (3 != l.b) { if (f.done) { l.b = 0; return; } g = f.value; h = y(g); t = h.next().value; return G(l, t, 3); } f = e.next(); l.b = 2; }); }; k.set = function (c, d, e) { Q(arguments, 2); var f = P.apply(null, arguments); this.f[f[0]] = [[f[1], f[2]]]; }; k.values = function d() { var e = this, f, g, h, t, l; return N(d, function (n) { 1 == n.b && (f = y(e), g = f.next()); if (3 != n.b) { if (g.done) { n.b = 0; return; } h = g.value; t = y(h); t.next(); l = t.next().value; return G(n, l, 3); } g = f.next(); n.b = 2; }); }; Z.prototype._asNative = function () { for (var d = new U(), e = y(this), f = e.next(); !f.done; f = e.next()) { var g = y(f.value); f = g.next().value; g = g.next().value; d.append(f, g); } return d; }; Z.prototype._blob = function () { for (var d = "----formdata-polyfill-" + Math.random(), e = [], f = y(this), g = f.next(); !g.done; g = f.next()) { var h = y(g.value); g = h.next().value; h = h.next().value; e.push("--" + d + "\r\n"); h instanceof Blob ? e.push('Content-Disposition: form-data; name="' + g + '"; filename="' + h.name + '"\r\n', "Content-Type: " + (h.type || "application/octet-stream") + "\r\n\r\n", h, "\r\n") : e.push('Content-Disposition: form-data; name="' + g + '"\r\n\r\n' + h + "\r\n"); } e.push("--" + d + "--"); return new Blob(e, { type: "multipart/form-data; boundary=" + d }); }; Z.prototype[Symbol.iterator] = function () { return this.entries(); }; Z.prototype.toString = function () { return "[object FormData]"; }; Y && (Z.prototype[Y] = "FormData"); if (V) { var aa = T.XMLHttpRequest.prototype.setRequestHeader; T.XMLHttpRequest.prototype.setRequestHeader = function (d, e) { aa.call(this, d, e); "content-type" === d.toLowerCase() && (this.u = !0); }; T.XMLHttpRequest.prototype.send = function (d) { d instanceof Z ? (d = d._blob(), this.u || this.setRequestHeader("Content-Type", d.type), V.call(this, d)) : V.call(this, d); }; } if (W) { var ba = T.fetch; T.fetch = function (d, e) { e && e.body && e.body instanceof Z && (e.body = e.body._blob()); return ba.call(this, d, e); }; } X && (T.navigator.sendBeacon = function (d, e) { e instanceof Z && (e = e._asNative()); return X.call(this, d, e); }); T.FormData = Z; }; })(); }, getAnnualSalary: function (value, type) { switch (type) { case 'per hour': return value * 2080; case 'per day': return value * 260; case 'per week': return value * 52; default: return value; } }, formatNumber: function (number) { number = parseFloat(number); return parseFloat(number.toFixed(2)); }, getEmploymentType: function (empType, eType) { eType = !eType ? eType : eType.toLowerCase(); if ((!eType || eType === 'full-time') && ((empType === 'Permanent') || (empType === 'Work from home - Permanent'))) return 'FULL_TIME'; else if ((!eType || eType === 'part-time') && ((empType === 'Permanent') || (empType === 'Work from home - Permanent'))) return "PART_TIME"; else if ((!eType || eType === 'full-time') && (empType === 'Contract' || empType === 'Work from home - Contract')) return "[\"CONTRACTOR\",\"FULL_TIME\"]"; else if ((!eType || eType === 'part-time') && (empType === 'Contract' || empType === 'Work from home - Contract')) return "[\"CONTRACTOR\",\"PART_TIME\"]"; else if ((!eType || eType === 'full-time') && (empType === 'Temporary' || empType === 'Interim' || empType === 'Temp to Perm')) return "[\"TEMPORARY\",\"FULL_TIME\"]"; else if ((!eType || eType === 'part-time') && (empType === 'Temporary' || empType === 'Interim' || empType === 'Temp to Perm')) return "[\"TEMPORARY\",\"PART_TIME\"]"; else if (empType === 'Voluntary') return 'VOLUNTEER'; else if (empType === 'Training' || empType === 'Internship') return 'INTERN'; else return 'OTHER'; }, addEcommerce: function (jobImpressionsGroups, offset, pushWithEvent, blockId = '', isROne = false) { var ecommerce = {}; window.dataLayer = window.dataLayer || []; if (jobImpressionsGroups && jobImpressionsGroups.length) { var impressions = []; var itemsGA4 = []; for (var ind in jobImpressionsGroups) { var group = jobImpressionsGroups[ind]; var type = group['type']; var type_ga4 = group['type_ga4']; var name_ga4 = group['name_ga4']; var jobImpressionsData = group['data']; if (jobImpressionsData && jobImpressionsData.length) { for (var i in jobImpressionsData) { var job = false; if ('_source' in jobImpressionsData[i]) job = jobImpressionsData[i]['_source']; else job = jobImpressionsData[i]; var position = 1 + Number(offset) + Number(i); var parsed = Drupal.behaviors.dataLayerHelper.parseJobInfo(job, position, type, type_ga4, name_ga4); var parsedGA4 = Drupal.behaviors.dataLayerHelper.buildGA4Info(job, position); impressions.push(parsed); itemsGA4.push(parsedGA4); } ecommerce.impressions = impressions; } } } window.dataLayerGA4Helper = window.dataLayerGA4Helper || []; window.dataLayerGA4Helper.push({ block_id: '#' + blockId, event: "view_item_list", ecommerce: { item_list_id: type_ga4, item_list_name: name_ga4, items: itemsGA4.slice(3, 14) } }); window.dataLayer = window.dataLayer || []; window.dataLayer.push({ ecommerce: null }); window.dataLayer.push({ event: "view_item_list", ecommerce: { item_list_id: type_ga4, item_list_name: name_ga4, items: itemsGA4.slice(0, 3) } }); if (pushWithEvent) window.dataLayer.push({ 'event': 'jobImpressions', 'ecommerce': { 'impressions': ecommerce.impressions } }); else { if (window.dataLayer !== undefined && ecommerce.impressions) if (window.dataLayer[0] !== undefined) if (window.dataLayer[0].ecommerce !== undefined) if (window.dataLayer[0].ecommerce.impressions !== undefined) for (var imp in ecommerce.impressions) window.dataLayer[0].ecommerce.impressions.push(ecommerce.impressions[imp]); else Object.assign(window.dataLayer[0].ecommerce.impressions, ecommerce.impressions); else { window.dataLayer[0].ecommerce = {}; Object.assign(window.dataLayer[0].ecommerce, ecommerce); } } }, formatDateToISOString: function (date) { if (isNaN(date.getMonth())) return false; function pad(number) { return (number < 10) ? '0' + number : number; } return date.getUTCFullYear() + '-' + pad(date.getUTCMonth() + 1) + '-' + pad(date.getUTCDate()); } }; })(jQuery, Drupal, drupalSettings);;
'use strict'; (function ($, Drupal, drupalSettings) { $.getScript('https://static.addtoany.com/menu/page.js', function (data, textStatus, jqxhr) { if (jqxhr.status !== 200) console.log('Cannot load "https://static.addtoany.com/menu/page.js"!'); }); if (drupalSettings && drupalSettings.add_to_any_tracking) $('ul[data-a2a-url] a.social__link').click(function () { window.dataLayer = window.dataLayer || []; window.dataLayer.push({ 'eventCategory': 'Hubspot', 'eventAction': 'hubspot blog share', 'eventLabel': this.getAttribute('title'), 'event': 'eventTracker' }); }); })(jQuery, Drupal, drupalSettings);;