/* @license GNU-GPL-2.0-or-later https://www.drupal.org/licensing/faq */
(() => { var ne = Object.create; var H = Object.defineProperty; var re = Object.getOwnPropertyDescriptor; var oe = Object.getOwnPropertyNames; var le = Object.getPrototypeOf, ue = Object.prototype.hasOwnProperty; var Z = (e) => H(e, "__esModule", { value: !0 }); var q = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), G = (e, t) => { Z(e); for (var s in t) H(e, s, { get: t[s], enumerable: !0 }); }, b = (e, t, s) => { if (t && typeof t == "object" || typeof t == "function") { for (let i of oe(t)) !ue.call(e, i) && i !== "default" && H(e, i, { get: () => t[i], enumerable: !(s = re(t, i)) || s.enumerable }); } return e; }, O = (e) => b(Z(H(e != null ? ne(le(e)) : {}, "default", e && e.__esModule && "default" in e ? { get: () => e.default, enumerable: !0 } : { value: e, enumerable: !0 })), e); var U = q((Ee, X) => { var Q = class { static triggerEvent(t, s) { let i; typeof Event == "function" ? i = new Event(s) : (i = document.createEvent("Event"), i.initEvent(s, !0, !0)), t.dispatchEvent(i); } static getElementByAttribute(t, s) { return s ? document.querySelector(`[${t}="${s}"]`) : document.querySelector(`[${t}]`); } static getElementsByAttribute(t, s) { return s ? document.querySelectorAll(`[${t}="${s}"]`) : document.querySelectorAll(`[${t}]`); } static getElementByAttributeWithinElement(t, s, i) { return i ? t.querySelector(`[${s}="${i}"]`) : t.querySelector(`[${s}]`); } static isMouseOver(t) { return Array.prototype.slice.call(t.parentElement.querySelectorAll(":hover")).filter(function () { return t[0] == this; }).length > 0; } static getElementsByAttributeWithinElement(t, s, i) { return i ? t.querySelectorAll(`[${s}="${i}"]`) : t.querySelectorAll(`[${s}]`); } static getElementByClassWithinElement(t, s) { return t.querySelector(`.${s}`); } static maxWidthMobileViewports() { return 940; } static createEvent(t) { let s; return typeof Event == "function" ? s = new Event(t) : (s = document.createEvent("Event"), s.initEvent(t, !0, !0)), s; } static isDesktop() { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } static isIE11() { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } static getKeyCodeOnKeyDownEvent(t) { let s; if (t != null) if (typeof t.code == "undefined") switch (t.keyCode) { case 13: s = "Enter"; break; case 38: s = "ArrowUp"; break; case 40: s = "ArrowDown"; break; case 8: s = "Backspace"; break; case 9: s = "Tab"; break; case 27: s = "Escape"; break; case 33: s = "PageUp"; break; case 34: s = "PageDown"; break; case 32: s = "Space"; break; default: s = void 0; break; } else s = t.code; return s; } static getKeyboardFocusableElements(t) { let s = (i) => window.getComputedStyle(i).visibility === "hidden"; return [...t.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])')].filter((i) => !s(i) && !i.hasAttribute("disabled") && !i.getAttribute("aria-hidden")); } }; X.exports = Q; }); var N = q((te) => { "use strict"; var $ = function () { function e(t, s) { for (var i = 0; i < s.length; i++) { var a = s[i]; a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a); } } return function (t, s, i) { return s && e(t.prototype, s), i && e(t, i), t; }; }(), de = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) { return typeof e; } : function (e) { return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e; }; function he(e) { if (Array.isArray(e)) { for (var t = 0, s = Array(e.length); t < e.length; t++)s[t] = e[t]; return s; } else return Array.from(e); } function ee(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function"); } (function (e, t) { for (var s in t) e[s] = t[s]; })(te, function (e) { var t = {}; function s(i) { if (t[i]) return t[i].exports; var a = t[i] = { i, l: !1, exports: {} }; return e[i].call(a.exports, a, a.exports, s), a.l = !0, a.exports; } return s.m = e, s.c = t, s.d = function (i, a, o) { s.o(i, a) || Object.defineProperty(i, a, { enumerable: !0, get: o }); }, s.r = function (i) { typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(i, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(i, "__esModule", { value: !0 }); }, s.t = function (i, a) { if (1 & a && (i = s(i)), 8 & a || 4 & a && (typeof i == "undefined" ? "undefined" : de(i)) == "object" && i && i.__esModule) return i; var o = Object.create(null); if (s.r(o), Object.defineProperty(o, "default", { enumerable: !0, value: i }), 2 & a && typeof i != "string") for (var n in i) s.d(o, n, function (d) { return i[d]; }.bind(null, n)); return o; }, s.n = function (i) { var a = i && i.__esModule ? function () { return i.default; } : function () { return i; }; return s.d(a, "a", a), a; }, s.o = function (i, a) { return Object.prototype.hasOwnProperty.call(i, a); }, s.p = "", s(s.s = 90); }({ 0: function (t, s) { t.exports = function () { function i() { ee(this, i); } return $(i, null, [{ key: "triggerEvent", value: function (o, n) { var d = void 0; typeof Event == "function" ? d = new Event(n) : (d = document.createEvent("Event"), d.initEvent(n, !0, !0)), o.dispatchEvent(d); } }, { key: "getElementByAttribute", value: function (o, n) { return n ? document.querySelector("[" + o + '="' + n + '"]') : document.querySelector("[" + o + "]"); } }, { key: "getElementsByAttribute", value: function (o, n) { return n ? document.querySelectorAll("[" + o + '="' + n + '"]') : document.querySelectorAll("[" + o + "]"); } }, { key: "getElementByAttributeWithinElement", value: function (o, n, d) { return d ? o.querySelector("[" + n + '="' + d + '"]') : o.querySelector("[" + n + "]"); } }, { key: "isMouseOver", value: function (o) { return Array.prototype.slice.call(o.parentElement.querySelectorAll(":hover")).filter(function () { return o[0] == this; }).length > 0; } }, { key: "getElementsByAttributeWithinElement", value: function (o, n, d) { return d ? o.querySelectorAll("[" + n + '="' + d + '"]') : o.querySelectorAll("[" + n + "]"); } }, { key: "getElementByClassWithinElement", value: function (o, n) { return o.querySelector("." + n); } }, { key: "maxWidthMobileViewports", value: function () { return 940; } }, { key: "createEvent", value: function (o) { var n = void 0; return typeof Event == "function" ? n = new Event(o) : (n = document.createEvent("Event"), n.initEvent(o, !0, !0)), n; } }, { key: "isDesktop", value: function () { return Math.max(document.documentElement.clientWidth, window.innerWidth || 0) > this.maxWidthMobileViewports(); } }, { key: "isIE11", value: function () { return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.appVersion.indexOf("Trident/") > -1; } }, { key: "getKeyCodeOnKeyDownEvent", value: function (o) { var n = void 0; if (o != null) if (o.code === void 0) switch (o.keyCode) { case 13: n = "Enter"; break; case 38: n = "ArrowUp"; break; case 40: n = "ArrowDown"; break; case 8: n = "Backspace"; break; case 9: n = "Tab"; break; case 27: n = "Escape"; break; case 33: n = "PageUp"; break; case 34: n = "PageDown"; break; case 32: n = "Space"; break; default: n = void 0; } else n = o.code; return n; } }, { key: "getKeyboardFocusableElements", value: function (o) { return [].concat(he(o.querySelectorAll('a[href], button, input, textarea, iframe, select, details,[tabindex]:not([tabindex="-1"])'))).filter(function (n) { return !function (d) { return window.getComputedStyle(d).visibility === "hidden"; }(n) && !n.hasAttribute("disabled") && !n.getAttribute("aria-hidden"); }); } }]), i; }(); }, 90: function (t, s, i) { t.exports = i(91); }, 91: function (t, s, i) { "use strict"; i.r(s), i.d(s, "Clearable", function () { return n; }); var a = i(0), o = i.n(a), n = function () { function d(y) { ee(this, d), this.element = y, this.input = this.element.querySelector("input"), this.button = o.a.getElementByAttributeWithinElement(this.element, this.attributes.button), this.input && (this.input.value && this.input.value.length > 0 && this.element.classList.add(this.classes.clearableInputActive), this.addEventHandlers()); } return $(d, [{ key: "addEventHandlers", value: function () { var p = this; this.button.addEventListener("click", function (B) { B.preventDefault(), p.input.value = "", p.element.classList.remove(p.classes.clearableInputActive), o.a.triggerEvent(p.input, "change"), p.button.setAttribute(p.attributes.ariaHidden, !0), p.input.focus(); }), this.input.addEventListener("input", function () { p.input.value.length > 0 ? (p.element.classList.add(p.classes.clearableInputActive), p.button.setAttribute(p.attributes.ariaHidden, !1)) : (p.element.classList.remove(p.classes.clearableInputActive), p.button.setAttribute(p.attributes.ariaHidden, !0)); }); } }, { key: "attributes", get: function () { return { button: "data-rs-clearable-button", ariaHidden: "aria-hidden" }; } }, { key: "classes", get: function () { return { clearableInputActive: "clearable-input--active" }; } }], [{ key: "getSelector", value: function () { return "[data-rs-clearable]"; } }]), d; }(); } })); }); var Y = q((ie) => { "use strict"; var me = function () { function e(t, s) { for (var i = 0; i < s.length; i++) { var a = s[i]; a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a); } } return function (t, s, i) { return s && e(t.prototype, s), i && e(t, i), t; }; }(), ge = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function (e) { return typeof e; } : function (e) { return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e; }; function ye(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function"); } (function (e, t) { for (var s in t) e[s] = t[s]; })(ie, function (e) { var t = {}; function s(i) { if (t[i]) return t[i].exports; var a = t[i] = { i, l: !1, exports: {} }; return e[i].call(a.exports, a, a.exports, s), a.l = !0, a.exports; } return s.m = e, s.c = t, s.d = function (i, a, o) { s.o(i, a) || Object.defineProperty(i, a, { enumerable: !0, get: o }); }, s.r = function (i) { typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(i, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(i, "__esModule", { value: !0 }); }, s.t = function (i, a) { if (1 & a && (i = s(i)), 8 & a || 4 & a && (typeof i == "undefined" ? "undefined" : ge(i)) == "object" && i && i.__esModule) return i; var o = Object.create(null); if (s.r(o), Object.defineProperty(o, "default", { enumerable: !0, value: i }), 2 & a && typeof i != "string") for (var n in i) s.d(o, n, function (d) { return i[d]; }.bind(null, n)); return o; }, s.n = function (i) { var a = i && i.__esModule ? function () { return i.default; } : function () { return i; }; return s.d(a, "a", a), a; }, s.o = function (i, a) { return Object.prototype.hasOwnProperty.call(i, a); }, s.p = "", s(s.s = 245); }({ 245: function (t, s, i) { t.exports = i(246); }, 246: function (t, s, i) { "use strict"; i.r(s), i.d(s, "Untouched", function () { return a; }); var a = function () { function o(n) { ye(this, o), this.element = n, this.addEventHandlers(); } return me(o, [{ key: "addEventHandlers", value: function () { var d = this; this.element.addEventListener("focus", function () { d.removeUntouchedClass(d.element); }), this.element.addEventListener("click", function () { d.removeUntouchedClass(d.element); }), this.element.addEventListener("keyup", function () { d.removeUntouchedClass(d.element); }), this.element.addEventListener("change", function () { d.removeUntouchedClass(d.element); }); } }, { key: "removeUntouchedClass", value: function (d) { d.classList.remove(this.classes.untouched); } }, { key: "classes", get: function () { return { untouched: "untouched" }; } }], [{ key: "getSelector", value: function () { return "[data-rs-untouched]"; } }]), o; }(); } })); }); var R = O(U()); var C = O(U()), x = "data-rs-auto-suggest", W = class { constructor(t) { this.element = t, this.minimumLength = 1, this.container = this.element, this.input = C.default.getElementByAttributeWithinElement(this.element, this.attributes.input), this.noResultMessage = this.input.getAttribute(this.attributes.noResultMessage), this.list = C.default.getElementByAttributeWithinElement(this.element, this.attributes.list), this.separator = this.list.getAttribute(this.attributes.separator), this.dataSource = this.getDataSource(), this.disableNativeAutoComplete(), this.addEventHandlers(), this.numberOfListItems = 0, this.selectedIndex, this.selectedValue, this.previousInput = "", this.resultList; } get attributes() { return { autocomplete: "autocomplete", noResultMessage: `${x}-no-result-message`, container: `${x}-container`, index: `${x}-index`, input: `${x}-input`, list: `${x}-list`, listValue: `${x}-list-value`, preselect: `${x}-preselect`, selected: `${x}-selected`, separator: `${x}-separator`, values: `${x}-values` }; } get classes() { return { autosuggestOpen: "select-menu--open", autosuggestItem: "select-menu__item", autosuggestNoResult: "select-menu__item select-menu__item--no-result", autosuggestPreselect: "select-menu__item--preselect" }; } get keyCodes() { return { Enter: "Enter", Up: "ArrowUp", Down: "ArrowDown", Tab: "Tab", Escape: "Escape", PageUp: "PageUp", PageDown: "PageDown" }; } disableNativeAutoComplete() { this.input.setAttribute(this.attributes.autocomplete, "off"); } addEventHandlers() { ["input", "focus"].forEach((t) => { this.input.addEventListener(t, () => { this.numberOfListItems = 0, this.input.value.length >= this.minimumLength ? ((this.previousInput.length < this.minimumLength || this.input.value.toLowerCase().indexOf(this.previousInput.toLowerCase()) === -1) && (this.dataSource = this.getDataSource()), this.createList()) : this.closeList(), this.previousInput = this.input.value; }); }), this.input.addEventListener("keydown", (t) => { C.default.getKeyCodeOnKeyDownEvent(t) == this.keyCodes.Tab && (this.selectedIndex > -1 && this.setSelectedValue(this.selectedIndex), this.closeList()), C.default.getKeyCodeOnKeyDownEvent(t) == this.keyCodes.Escape && this.closeList(); }), document.addEventListener("click", (t) => { !this.list.contains(t.target) && !this.input.contains(t.target) && this.closeList(); }), document.addEventListener("keydown", (t) => { this.handleButtonKeys(t); }); } createList() { let t = "", s = 0; if (this.resultList = JSON.parse(JSON.stringify(this.dataSource)), this.dataSource.forEach((i) => { if (i.toLowerCase().indexOf(this.input.value.toLowerCase()) > -1) { let a = new RegExp(this.input.value, "gi"), o = i.replace(a, function (d) { return `<mark>${d}</mark>`; }), n = `<li class="${this.classes.autosuggestItem}" ${this.attributes.listValue} ${this.attributes.index}="${s}" >${o}</li>`; t = t + n, this.numberOfListItems++, s++; } else { let a = this.resultList.indexOf(i); a > -1 && this.resultList.splice(a, 1); } }), this.dataSource = JSON.parse(JSON.stringify(this.resultList)), this.numberOfListItems > 0) this.bindResultList(t); else { let i = `<li class="${this.classes.autosuggestNoResult}">${this.noResultMessage || "no results"} </li>`; this.bindResultList(i); } } bindResultList(t) { this.list.innerHTML = t, this.container.classList.add(this.classes.autosuggestOpen), this.list.querySelectorAll(`[${this.attributes.listValue}]`).forEach((s, i) => { i === 0 && (s.classList.add(this.classes.autosuggestPreselect), s.setAttribute(this.attributes.preselect, ""), this.selectedIndex = 0, this.updatePreselectedItem(this.selectedIndex, null, !0)), s.addEventListener("click", () => { this.setSelectedValue(this.selectedIndex); }), s.addEventListener("mouseenter", (a) => { this.updatePreselectedItem(s.getAttribute(this.attributes.index), a, !1); }); }); } updatePreselectedItem(t, s, i) { let a = C.default.getElementByAttribute(this.attributes.preselect); a.classList.remove(this.classes.autosuggestPreselect), a.removeAttribute(this.attributes.preselect); let o = C.default.getElementByAttribute(this.attributes.index, t); o.classList.add(this.classes.autosuggestPreselect), o.setAttribute(this.attributes.preselect, ""), this.selectedIndex = t, this.selectedValue = o.innerText, (typeof s != "undefined" && s !== null && s.type === "keydown" || i === !0) && this.setScrollbar(o, s); } setSelectedValue(t) { let s = C.default.getElementByAttribute(this.attributes.index, t); s != null && (this.input.value = s.innerText, this.closeList()); } handleButtonKeys(t) { if (t != null && this.selectedIndex > -1) switch (C.default.getKeyCodeOnKeyDownEvent(t)) { case this.keyCodes.Down: t.preventDefault(), this.selectedIndex < this.numberOfListItems - 1 && (this.selectedIndex++, this.updatePreselectedItem(this.selectedIndex, t, !1)); break; case this.keyCodes.Up: t.preventDefault(), this.selectedIndex > 0 && (this.selectedIndex--, this.updatePreselectedItem(this.selectedIndex, t, !1)); break; case this.keyCodes.PageDown: t.preventDefault(), this.selectedIndex < this.numberOfListItems - 1 && this.updatePreselectedItem(Number(this.numberOfListItems) - 1, t, !1); break; case this.keyCodes.PageUp: t.preventDefault(), this.selectedIndex > 0 && this.updatePreselectedItem(0, t, !1); break; case this.keyCodes.Enter: t.preventDefault(), this.setSelectedValue(this.selectedIndex); break; } } setScrollbar(t, s) { let i = t.offsetHeight, a = t.offsetTop, o = this.list.children[0].offsetTop; s != null && C.default.getKeyCodeOnKeyDownEvent(s) == this.keyCodes.Down ? i + a > this.list.offsetHeight + this.list.scrollTop && (this.list.scrollTop = i + a - this.list.offsetHeight) : (a - o < this.list.scrollTop || a + i > this.list.scrollTop + this.list.offsetHeight) && (this.list.scrollTop = a - o); } closeList() { this.container.classList.remove(this.classes.autosuggestOpen), this.list.innerHTML = "", this.selectedValue = "", this.selectedIndex = -1; } getDataSource() { let t = this.list.getAttribute(this.attributes.values); return typeof t != "undefined" && t !== null ? t.split(this.separator) : []; } static getSelector() { return `[${x}]`; } }; var j = class extends W { constructor(t) { super(t); this.submit = t.parentNode.querySelector('[type="submit"]'), this.numericValueRegex = this.list.dataset.rsNumericValueRegex; } addEventHandlers() { ["input", "focus"].forEach((t) => { this.input.addEventListener(t, () => { this.numberOfListItems = 0, this.input.value.length >= this.minimumLength ? (this.previousInput.length < this.minimumLength && (this.dataSource = this.getDataSource()), this.dataSource = this.getDataSource(), this.createList()) : this.container.classList.contains(this.classes.autosuggestOpen) && this.closeList(), this.previousInput = this.input.value; }); }), this.input.addEventListener("keydown", (t) => { R.default.getKeyCodeOnKeyDownEvent(t) == this.keyCodes.Tab && (this.selectedIndex > -1 && this.setSelectedValue(this.selectedIndex), this.closeList()), R.default.getKeyCodeOnKeyDownEvent(t) == this.keyCodes.Escape && this.closeList(); }), document.addEventListener("click", (t) => { !this.list.contains(t.target) && !this.input.contains(t.target) && this.container.classList.contains(this.classes.autosuggestOpen) && this.closeList(); }), document.addEventListener("keydown", (t) => { this.handleButtonKeys(t), this.additionalHandleButtonKeys(t); }); } additionalHandleButtonKeys(t) { if (t != null && this.selectedIndex > -1) switch (R.default.getKeyCodeOnKeyDownEvent(t)) { case this.keyCodes.Enter: t.preventDefault(), this.closeList(), this.input.blur(), this.submit && this.submit.focus(); break; } } closeList() { let t = new CustomEvent("autoSuggestCloseDropdown", { detail: { element: this.element } }); window.dispatchEvent(t), this.container.classList.remove(this.classes.autosuggestOpen), this.list.innerHTML = "", this.selectedValue = "", this.selectedIndex = -1; } createList() { let t = "", s = 0; if (this.resultList = JSON.parse(JSON.stringify(this.dataSource)), this.useExactValues = this.list.dataset.rsUseExactValues === "true", this.dataSource.forEach((i) => { if (i.toLowerCase().indexOf(this.input.value.toLowerCase()) > -1 || this.useExactValues && i) { let a = this.input.value.replace(/[-\[\]/{}()*+?.\\^$|]/g, "\\$&"), o = new RegExp(a, "gi"), n = i.replace(o, function (y) { return `<mark>${y}</mark>`; }), d = `<li class="${this.classes.autosuggestItem}" ${this.attributes.listValue} ${this.attributes.index}="${s}" >${n}</li>`; t = t + d, this.numberOfListItems++, s++; } else { let a = this.resultList.indexOf(i); a > -1 && this.resultList.splice(a, 1); } }), this.dataSource = JSON.parse(JSON.stringify(this.resultList)), this.numberOfListItems > 0) this.bindResultList(t); else { let i = `<li class="${this.classes.autosuggestNoResult}">${this.noResultMessage || "no results"} </li>`; this.bindResultList(i); } } setSelectedValue(t) { let s = R.default.getElementByAttribute(this.attributes.index, t); if (s != null) { let i = s.innerText; if (this.numericValueRegex && Number.parseInt(this.input.value)) { let n = new RegExp(this.numericValueRegex, "g"), d = s.innerText.match(n); d && d.forEach((y) => { if (y = y.replace(/[()]/g, ""), Number.parseInt(y)) { i = y; return; } }); } Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set.call(this.input, i); let o = new CustomEvent("input", { bubbles: !0 }); this.input.dispatchEvent(o), this.closeList(); } } }; var ce = (e) => { new j(e); }; window.orbit = window.orbit || {}; window.orbit.autoSuggest = ce; var L = {}; G(L, { default: () => pe }); b(L, O(N())); var F = O(N()), fe = (e) => { new F.Clearable(e); }; window.orbit = window.orbit || {}; window.orbit.clearable = fe; var pe = F.Clearable; var A = {}; G(A, { default: () => ve }); b(A, O(Y())); var J = O(Y()), be = (e) => { new J.Untouched(e); }; window.orbit = window.orbit || {}; window.orbit.untouched = be; var ve = J.Untouched; (function (e, t, s) { let i = e("[data-salary-yearly]") && e("[data-salary-yearly]").attr("data-salary-yearly").length > 0 ? e("[data-salary-yearly]").attr("data-salary-yearly") : "20,000", a = e("[data-salary-daily]") && e("[data-salary-daily]").attr("data-salary-daily").length > 0 ? e("[data-salary-daily]").attr("data-salary-daily") : "500", o = e("[data-salary-hourly]") && e("[data-salary-hourly]").attr("data-salary-hourly").length > 0 ? e("[data-salary-hourly]").attr("data-salary-hourly") : "25"; window.Drupal = t, window.drupalSettings = s; let n = [16, 17, 18, 20, 33, 34, 35, 36, 37, 38, 39, 40, 9, 13, 27]; var d = ""; let y = {}, p = function (c) { if (c.coords.latitude && c.coords.longitude) { let f = c.coords.latitude, m = c.coords.longitude; e.post(d + "/api/search/current-location", { lat: f, lng: m }, function (l) { l && l.cityName && l.stateName && (se(), e("[data-search-location] input").each(function () { e(this).val(`${l.cityName}, ${l.stateName}`).trigger("focusout"), e(this).next("ul").attr("data-rs-auto-suggest-values", [`${l.cityName}, ${l.stateName}`]); })); }); } }, B = function () { ae("nearByLocation") !== "" ? (e("#location-text-modal").text(window.Drupal.t("Your location settings are disabled. You can enable them in the browser settings.")), e("#share-location-button-trigger-modal").css("display", "none"), e("#share-location-button-modal").css("display", "none")) : (e("#share-location-button-trigger-modal").css("display", "inline-block"), e("#location-text-modal").text(window.Drupal.t("Your location settings are disabled. You can enable them in the browser settings.")), e("#share-location-button").css("display", "none"), e("#share-location-button-modal").css("display", "none")); }, se = function () { e(".form-group__location").addClass("form-group__input--icon form-group__location--active"), e(".advanced-search-form .location-nearby, [data-header-search-form-component] .location-nearby").css("display", "none"), e(".form-group__location--active button").click(function () { e('.form-group__location--active input[type="text"]').val("").trigger("focusout"), e(".form-group__location--active").removeClass("form-group__input--icon form-group__location--active"); }); }, z = e("[data-division-company-id]").attr("data-division-company-id"); e.fn.advancedSearch = function () { let c = 0, f = this, m = e("[data-advanced-search-short]"), l = {}, v = 300; l.isRemote = !1, e("[data-search-geo-location]").one("click", function (r) { r.preventDefault(), navigator.geolocation && navigator.geolocation.getCurrentPosition(p, B); }), e("input, select", f).each(function () { l[e(this).attr("name")] = e(this).val(); }), e("[data-advanced-search-keyword]").on("keydown", function (r) { r.keyCode === 13 && setTimeout(function () { e("[data-search-jobs-number]").trigger("click"); }, 600); }), e("[data-advanced-search-location]").on("keydown", function (r) { r.keyCode === 13 && r.preventDefault(); }), e("[data-search-location] button").click(function (r) { r.preventDefault(), e(".form-group__location--active").removeClass("form-group__input--icon form-group__location--active"), e("[data-search-location] input").val(""), l.location = l.region = l.city = l.postcode = "", w(); }), e("[data-search-location] input").on("focusout", function () { e(this).val().length > 0 && e(".form-group__location").addClass("form-group__input--icon form-group__location--active"); }), e("[data-search-location] input:not([data-rs-auto-suggest-input]), select", f).change(function (r) { l[r.target.name] = r.target.value, r.target.name === "specialism" && (l.subSpecialism = ""), r.target.name === "salaryType" && e('select[name="salaryType"]', f).each(function () { e(this).val(r.target.value); }), r.target.name === "distance" && e('select[name="distance"]', f).each(function () { e(this).val(r.target.value); }), w(); }), e("[data-search-location] input:not([data-rs-auto-suggest-input]), select", m).change(function (r) { l[r.target.name] = r.target.value, w(); }); let I = function () { let r = ""; switch (e(this).val()) { case "perHour": r = o; break; case "perDay": r = a; break; default: r = i; break; }e("[data-advanced-search-salary]").each(function () { e(this).attr("placeholder", r); }); }; e("[data-advanced-search-salary-type]", f).each(I), e("[data-advanced-search-salary-type]", f).change(I), e("input:not([data-rs-auto-suggest-input])", f).on("keydown", function (r) { n.includes(r.keyCode) || c && clearTimeout(c); }).on("keyup change", function (r) { !n.includes(r.keyCode) && r.keyCode !== void 0 && T(!0).then(function (h) { c && clearTimeout(c), c = setTimeout(function () { l[r.target.name] = r.target.value ? r.target.value.trim() : "", w(); }, v); }); }).on("focusout", function (r) { r.target.name === "text" && e('input[name="text"]', f).each(function () { e(this).val(r.target.value); }), r.target.name === "salaryValue" && e('input[name="salaryValue"]', f).each(function () { e(this).val(r.target.value); }); }), e("input:not([data-rs-auto-suggest-input])", m).on("keydown", function (r) { n.includes(r.keyCode) || c && clearTimeout(c); }).on("keyup change", function (r) { !n.includes(r.keyCode) && r.keyCode !== void 0 && T(!0).then(function (h) { c && clearTimeout(c), c = setTimeout(function () { l[r.target.name] = r.target.value ? r.target.value.trim() : "", w(); }, v); }); }).on("focusout", function (r) { r.target.name === "text" && e('input[name="text"]', f).each(function () { e(this).val(r.target.value); }); }); var P = !1; e("[data-search-location] input").each(function () { let r = this; e(this).on("keydown", function (h) { n.includes(h.keyCode) || h.target.value.length > 0 && c && clearTimeout(c); }).on("keyup", function (h) { P = !0, !n.includes(h.keyCode) && h.keyCode !== void 0 && T(!0), h.keyCode === 13 && (c = setTimeout(function () { l[h.target.name] = h.target.value, l.region = l.city = l.postcode = "", c && clearTimeout(c), M(h.target.value), w(); }, v)), !(n.includes(h.keyCode) || h.target.value.length <= 0) && (c && clearTimeout(c), c = setTimeout(function () { e.get(d + "/api/search/location-autocomplete", { text: h.target.value }, function (u, E) { var k = u.length ? u.join(";") : ""; y.advSearchValues = k, e(r).next("ul").attr("data-rs-auto-suggest-values", k), e(r)[0].dispatchEvent(new Event("focus", { bubbles: !0 })); }); }, v)); }).on("focusout", function (h) { P ? c = setTimeout(function () { l[h.target.name] = h.target.value, l.region = l.city = l.postcode = "", c && clearTimeout(c), M(h.target.value), w(); }, v) : (l[h.target.name] = h.target.value, l.region = l.city = l.postcode = "", M(h.target.value), w()); }); }), e("#is-remote").on("click", function () { l.isRemote = !l.isRemote, w(); }); var V = !1; let _ = e("[data-search-title] input"); _.each(function () { let r = this, h = _.parent(".clearable-input"); e(this).on("keydown", function (u) { n.includes(u.keyCode) || u.target.value.length > 0 && c && clearTimeout(c); }).on("keyup", function (u) { V = !0, !n.includes(u.keyCode) && u.keyCode !== void 0 && T(!0), u.keyCode === 13 && (c = setTimeout(function () { l[u.target.name] = u.target.value, c && clearTimeout(c), w(); }, v)), u.target.value && u.target.value.length ? (_.not(e(this)).val(u.target.value), h.addClass("clearable-input--active")) : h.removeClass("clearable-input--active"), !(n.includes(u.keyCode) || u.target.value.length <= 0) && (c && clearTimeout(c), c = setTimeout(function () { e.get(d + "/api/search/job-title-autocomplete", { text: u.target.value }, function (E, k) { var g = E.length ? E.join(";") : ""; _.next("ul").attr("data-rs-auto-suggest-values", g), e(r)[0].dispatchEvent(new Event("focus", { bubbles: !0 })); }); }, v)); }).on("focusout", function (u) { V ? c = setTimeout(function () { l[u.target.name] = u.target.value, _.not(e(this)).val(u.target.value), c && clearTimeout(c), w(); }, v) : (l[u.target.name] = u.target.value, w()); }); }), _.siblings("button").click(function () { _.val(""), _.parent(".clearable-input").removeClass("clearable-input--active"), l && l.text && (l.text = ""), w(); }); let w = function () { let r = e("[data-header-search-form-component]").attr("data-internal-search"), h = e("[data-header-search-form-component]").attr("data-search-url"); window.drupalSettings && window.drupalSettings.currentLanguage && (l.currentLanguage = window.drupalSettings.currentLanguage), z.length > 0 ? l.divisionId = z : r.length > 0 && parseInt(r) && (l.internalOnly = !0), h.length > 0 && (l.searchPath = h), e.get(d + "/api/search/get-search-results", l).done(function (u) { T(!1); let E = e("#search-location"), k = e("[data-advanced-search-location]"); if (e("[data-rs-modal^=advanced-search].modal--active").length) { let g = k.val(); E.next("ul").attr("data-rs-auto-suggest-values", y.advSearchValues), E.val(g), e("#search-keyword").val(e("[data-advanced-search-keyword]").val()), e("[data-mobile-job-search]").is(":visible") && (e("#search-keyword").val(e("[data-advanced-search-keyword]").val()), e("#search-location").val(e("[data-advanced-search-location]").val())); } else { let g = E.val(); k.next("ul").attr("data-rs-auto-suggest-values", y.advSearchValues), k.val(g); } u && u.validationError === !0 ? window.sessionStorage.setItem("validationError", u.validationError) : window.sessionStorage.removeItem("validationError"), e("[data-advanced-search-keyword]").val() ? window.sessionStorage.setItem("searchValue", e("[data-advanced-search-keyword]").val()) : window.sessionStorage.removeItem("searchValue"), l.isRemote ? u.isRemote = !0 : u.isRemote = !1, u && u.searchUrl && e("[data-header-search-form-component]").attr("action", u.searchUrl), e("[data-search-jobs-number]").not(".mobile-header-search-results").each(function () { e(this).off("click"), e(this).on("click", function (D) { D.preventDefault(), window.location = u.searchUrl; }); let g = u.total === 1 ? window.Drupal.t("job") : window.Drupal.t("jobs"); e(".button__text", this).text(window.Drupal.t("search @total @jobs", { "@total": u.total, "@jobs": g })), e(".button--filled[data-search-jobs-number]").attr("data-search-jobs-number", u.total); }), e('input[name="location"]', f).each(function () { e(this).val(l.location); }), e("[data-search-branch-specialism]").each(function () { e('option:not([value=""])', this).remove(); let g = !0; if (u.total > 0) { for (let S = 0; S < u.specialisms.length; S++)u.specialisms[S].sanitized ? e(this).append(e("<option>", { value: u.specialisms[S].sanitized, text: u.specialisms[S].key })) : e(this).append(e("<option>", { value: u.specialisms[S].key.replace(/(& |,|\/)/g, "").replace(/ /g, "-").replace("--", "-"), text: u.specialisms[S].key })); } else g = !1; let D = g ? l.specialism : ""; e(this).val(D); }), e("[data-search-branch-sub-specialism]").each(function () { e('option:not([value=""])', this).remove(), e(this).closest(".form-group").addClass("hidden"); let g = !0; if (l.specialism && u.subSpecialisms.length && u.total > 0) { e(this).closest(".form-group").removeClass("hidden"); for (let S = 0; S < u.subSpecialisms.length; S++)e(this).append(e("<option>", { value: u.subSpecialisms[S].key.replace(/(& |,|\/)/g, "").replace(/ /g, "-").replace("--", "-"), text: u.subSpecialisms[S].key })); } else g = !1; let D = g ? l.subSpecialism : ""; e(this).val(D); }); }); }, M = function (r) { let h = window.Drupal.t("^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$"); window.drupalSettings && window.drupalSettings.advanced_search_settings && (h = window.drupalSettings.advanced_search_settings.postalCodeRegex); var u = new RegExp(h); if (u.test(r)) l.postcode = r.replace(/ /g, "-"); else if (r.includes(", ")) { var E = r.split(", "); if (E[0] !== "") { var k = E[1], g = E[0]; k === "" && (k = g, g = ""), E.length > 1 ? (l.region = k, l.city = g) : l.region = k; } } else r !== "" && (l.region = r); }, T = function (r) { return new Promise(function (h, u) { return e(".header--search-alternative").find(".button--filled.button--m, .button--filled.button--full-width").each(function (E) { e(this).attr("disabled", r); }), h({ disabled: r }); }); }; w(); }, e.fn.browserLocation = function () { navigator.permissions !== void 0 && navigator.permissions.query({ name: "geolocation" }).then(function (c) { c.state === "granted" && (e(".advanced-search-form .location-nearby, [data-header-search-form-component] .location-nearby").css("display", "none"), navigator.geolocation.getCurrentPosition(p, B)); }); }, e.fn.mobileSearchOptions = function () { var c = e("[data-mobile-job-search] .search-options a"); e(c).each(function () { var f = "[data-" + e(this).attr("data-search-option") + "]", m = e(f + " .form-group").first(), l = e(this).parents(".search-options"); e(this).one("click", function (v) { v.preventDefault(); var I = e(m).clone(!0, !0).insertBefore(l); if (e(this).parent().addClass("hidden"), K(A.Untouched), m.find("[data-advanced-search-location]").length > 0 && (I.find("select").val(m.find("select").val()), e("[data-advanced-search]").advancedSearch(), K(j), K(L.Clearable)), f === "[data-mobile-search-salary]" && I.find("select").val(m.find("select").val()), f === "[data-mobile-search-employment]" && I.find("select").val(m.find("select").val()), f === "[data-mobile-search-job]" && I.find("input").val(m.find("input").val()), f === "[data-mobile-search-specialism]") { var P = m.find("select[data-search-branch-specialism]").val(), V = m.find("select[data-search-branch-sub-specialism]").val(); I.find("select[data-search-branch-specialism]").val(P), I.find("select[data-search-branch-sub-specialism]").val(V); } }); }); }, e("document").ready(function () { e("[data-advanced-search]").browserLocation(), e("[data-advanced-search]").advancedSearch(), e("[data-advanced-search]").mobileSearchOptions(), e("[data-header-search-form-component]").on("submit", function (c) { c.preventDefault(); var f = e(this).attr("action"); f && (f = window.innerWidth < 940 && e("#is-remote-mobile").is(":checked") ? `${f}remote/` : f, window.location = f); }); }); function K(c) { let f = document.querySelectorAll(c.getSelector()); if (f.length) { for (let m of f) new c(m); } } let ae = function (c) { for (var f = c + "=", m = document.cookie.split(";"), l = 0; l < m.length; l++) { var v = m[l].trim(); if (v.indexOf(f) === 0) return v.substring(f.length, v.length); } return ""; }; })(jQuery, Drupal, drupalSettings); })();;