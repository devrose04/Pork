(function () { function a(a, b) { a.addEventListener("error", b), a.addEventListener("abort", b), a.addEventListener("timeout", b) } function b(a) { console.log(a.type + ": " + a.loaded + " bytes transferred\n", a) } function c(c, d, e, f, g) { var h = new XMLHttpRequest; a(h, b), f && h.addEventListener("load", function (a) { f(h, a) }), g && a(h, function (a) { g(h, a) }), h.open(c, d), e ? (h.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), h.send(JSON.stringify(e) || null)) : h.send() } function d(a) { c("GET", "/api/my-randstad/refresh-token", null, function (b, c) { i = null, 299 < b.status && (document.cookie = "MyRandInfo=; expires=-999; path=/", document.cookie = "AccessToken=; expires=-999; path=/"), a && a(b, c) }, function () { i = null, document.cookie = "MyRandInfo=; expires=-999; path=/", document.cookie = "AccessToken=; expires=-999; path=/" }) } function e(a) { var b = new RegExp("(?:^|; *)" + a + "=([^;]*)(?:;|$)"), c = document.cookie.match(b); return c ? c[1] : "" } function f(a) { var b, c = []; if (a) { var d = [{ version: "v6", pattern: /^v6_u:(.+)i:(.*)f:(.*)l:(.*)e:(.*)a:(\d*)c:(.*)p:(\d)p:(\d*)t:(\d*)r:(\d)a:(.*)$/ }, { version: "v5", pattern: /^v5_u:(.*)i:(.*)f:(.+)l:(.+)e:(.+)a:(\d+)c:(\d+)p:(\d)p:(\d+)t:(\d+)r:(\d)$/ }]; for (var e in d) b = a.match(d[e].pattern), b && (c = b) } return { logged_in: !!c[1], user_id: c[1] || null, initials: c[2] ? decodeURIComponent(c[2]) : "", first_name: c[3] ? decodeURIComponent(c[3]) : "", last_name: c[4] ? decodeURIComponent(c[4]) : "", email: c[5] ? decodeURIComponent(c[5]) : "", no_of_applications: c[6] || 0, signup_date: c[7] ? new Date(c[7]).toISOString().replace(/\.000Z$/, "Z") : "", photo: "1" === c[8] ? "/api/my-randstad/user-photo/" + c[1] + "/" + c[10] : "", progress_percent: c[9] || 0, token_time: c[10] || 0, remember_me: "1" === c[11] } } function g() { return i || (i = f(e("MyRandInfo"))), i } function h() { if (e("MyRandInfo")) { j && clearTimeout(j); var a = Date.now() - 1e3 * g().token_time; if (a > 1800000) d(function (a) { 200 <= a.status && 300 > a.status && setTimeout(h, 6e4) }); else { var b = Math.ceil(6e4 * (35 + 10 * Math.random()) - a); j = setTimeout(h, b) } } } var i, j; h(), window.myRandClient = { isLoggedIn: function () { return g().logged_in }, login: function (a, b) { c("POST", "/api/my-randstad/login", { email: a.email, password: a.password, remember_me: a.remember_me }, function (a, c) { b && b(a, c) }) }, existingSession: g, getCookie: e, refreshToken: d } })();